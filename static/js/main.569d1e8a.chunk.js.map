{"version":3,"sources":["components/modal-overlay/modal-overlay.module.css","components/not-found/not-found.module.css","components/user-profile/user-profile.module.css","components/ingredient-details/ingredient-details.module.css","pages/profile/profile.module.css","components/app-header/app-header.tsx","utils/utils.ts","utils/IngredientApi.ts","services/middleware/socket-middleware.ts","services/actions/order.ts","services/actions/items.ts","services/actions/cart-burger-costructor.ts","services/actions/user.ts","services/hooks/redux-hooks.ts","components/list-item/list-item.tsx","components/burger-constructor/burger-constructor.tsx","components/ingredient/ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","components/order-details/order-details.tsx","components/ingredient-details/ingredient-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","components/not-found/not-found.tsx","pages/login/login.tsx","pages/register/register.tsx","pages/forgot-password/forgot-password.tsx","pages/reset-password/reset-password.tsx","components/user-profile/user-profile.tsx","components/order-in-profile/order-in-profile.tsx","services/actions/websocket.ts","utils/constants.ts","pages/profile/profile.tsx","components/protected-route/protected-route.tsx","pages/ingredient/ingredient.tsx","components/order-in-feed/order-in-feed.tsx","pages/feed/feed.tsx","components/order/order.tsx","components/app/app.tsx","reportWebVitals.ts","services/reducers/cart-burger-constructor.ts","services/reducers/items.ts","services/reducers/order.ts","services/reducers/user.ts","services/reducers/websocket.ts","services/reducers/index.ts","services/store.ts","index.tsx","pages/feed/feed.module.css","components/list-item/list-item.module.css","components/order/order.module.css","components/burger-ingredients/burger-ingredients.module.css","pages/login/login.module.css","components/order-in-profile/order-in-profile.module.css","components/order-in-feed/order-in-feed.module.css","components/order-details/order-details.module.css","components/burger-constructor/burger-constructor.module.css","components/ingredient/ingredient.module.css","pages/register/register.module.css","pages/forgot-password/forgot-password.module.css","pages/reset-password/reset-password.module.css","components/app/app.module.css","components/modal/modal.module.css","pages/ingredient/ingredient.module.css","components/app-header/app-header.module.css"],"names":["module","exports","AppHeader","pathname","useLocation","className","style","header","exact","to","constructor1","activeClassName","active","button","icon","type","text__button","constructor2","constructor3","constructor4","setCookie","name","value","props","exp","expires","d","Date","setTime","getTime","toUTCString","encodeURIComponent","updatedCookie","propName","propValue","document","cookie","getCookie","matches","match","RegExp","replace","decodeURIComponent","undefined","setTokens","res","accessToken","split","refreshToken","localStorage","setItem","signOut","removeItem","setTimeLocalRu","date","createOrderDate","timeZone","getTimezoneOffset","Math","abs","time","getHours","getMinutes","timeDay","diffInTime","round","amountOrderAndQuantityIngredients","burgerIngredients","ingredients","result","forEach","ingredient","resultArray","Object","keys","key","find","item","_id","quantity","push","amount","price","wsActions","BASE_URL","handleResponse","response","ok","json","Promise","reject","status","ORDER_REQUEST","ORDER_SUCCESS","ORDER_ERROR","gerOrder","idIngredients","dispatch","fetch","headers","Authorization","method","body","JSON","stringify","then","success","orders","catch","err","GET_ITEMS_REQUEST","GET_ITEMS_SUCCESS","GET_ITEMS_ERROR","getItems","data","items","DELETE_ITEM","ADDED_ITEM","DELETE_ITEM_ON_INDEX","CHANGE_ORDER_INGREDIENT_IN_BURGER","CLEAR_CART","USER_REQUEST","USER_REGISTRATION_SUCCESS","USER_REGISTRATION_FAILED","USER_REQUEST_SUCCESS","USER_REQUEST_FAILED","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","RESET_PASSWORD_REQUEST","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAILED","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILED","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_FAILED","TOKEN_REQUEST","TOKEN_SUCCESS","TOKEN_FAILED","registration","email","password","IngredientApi","user","authorization","console","log","forgotPassword","resetPassword","token","logout","callback","getNewToken","changeUserProfile","message","getUser","useSelector","selectorHook","useDispatch","dispatchHook","ListItem","isCart","isUp","index","history","useHistory","ingredientsInBurger","store","cart","useDrag","collect","monitor","isDrag","isDragging","dragRef","useDrop","accept","drop","itemId","id","i","length","dropItem","splice","onDropHandler","isHover","isOver","dropTarget","border","ref","section","element_cart","element_up","element_down","left","onClick","e","preventDefault","state","background","image","src","alt","right","BurgerConstructor","setIsOpenModalOrder","location","burgerStructure","orderError","order","isLoggedIn","orderRequest","React","useState","priceBurger","setPriceBurger","disable","setDisable","useEffect","some","bun","scroll","map","price_order","text_order","disabled","size","from","Ingredient","count","setCount","qty","card","digits","BurgerIngredients","current","setCurrent","box","getElementById","one","two","three","boxRect","getBoundingClientRect","MathCoordinates","itemRect1","itemRect2","itemRect3","heightRect1","y","heightRect2","heightRect3","addEventListener","removeEventListener","bunRef","useRef","sauceRef","mainRef","handleClick","scrollIntoView","behavior","title","nav","collection","OrderDetails","numberOrder","orderNumber","content","IngredientDetails","useParams","dataStorage","getItem","parse","list","element","calories","proteins","fat","carbohydrates","ModalOverlay","children","closeModal","currentTarget","target","Modal","closeESC","evt","keyCode","container","NotFound","goBack","Login","inputValue","setInputValue","handleChange","form","onSubmit","placeholder","onChange","links","link_container","link","Register","ForgotPassword","isForgotPassword","ResetPassword","isResetPassword","UserProfile","isChangeField","setIsChangeField","OrderInProfile","setTimeZone","setTimeDay","sumOrder","setSumOrder","ingredientsInOrder","setIngredientsInOrder","statusOrder","setStatusOrder","timeLocal","createdAt","amountAndArray","slice","top","number","bottom","images","WS_CONNECTION_START","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_MESSAGE","wsInit","url","payload","onOpen","onClose","onError","onMessage","msg","wsUrl","Profile","socket","messages","flex","color","path","ProtectedRoute","rest","render","text_title","OrderInFeed","Feed","total","totalToday","ordersDone","setOrdersDone","ordersPending","setOrdersPending","resultOrdersDone","resultOrdersPending","resultSortedOrdersDone","sort","a","b","resultSortedOrdersPending","content2","ordersNumbers","Order","wsConnected","orderFindById","leftPart","rightPart","App","isLoading","isOpenModalOrder","tokenSuccess","Boolean","app","DndProvider","backend","HTML5Backend","dropIngredient","bunTypeInBurger","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","cartInitialStateBurgerConstructor","initialStateItems","itemsError","ordersInitialState","orderName","userInitialState","userRequest","passwordRequest","resetPasswordRequest","logoutRequest","logoutFailed","updateUserRequest","updateUserSuccess","tokenRequest","initialState","rootReducer","combineReducers","action","filter","error","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","next","WebSocket","onopen","event","onerror","onmessage","parsedData","restParsedData","onclose","thunk","createStore","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.569d1e8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"modal-overlay_section__3xK6h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"not-found_section__3VchC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"user-profile_form__l8z7J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ingredient-details_section__2I1Tp\",\"image\":\"ingredient-details_image__2eLu1\",\"list\":\"ingredient-details_list__D66OT\",\"element\":\"ingredient-details_element__E9gYe\",\"title\":\"ingredient-details_title__3TAdm\",\"content\":\"ingredient-details_content__ytKhm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"profile_section__5EMk7\",\"nav\":\"profile_nav__2JjhX\",\"link\":\"profile_link__3Z-Br\",\"active\":\"profile_active__hFBcZ\",\"color\":\"profile_color__2rIZO\",\"flex\":\"profile_flex__1BLvB\",\"scroll\":\"profile_scroll__18PWD\"};","import React from 'react';\r\nimport { Logo, BurgerIcon, ListIcon, ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport style from './app-header.module.css';\r\n\r\nfunction AppHeader() {\r\n\r\n    const { pathname } = useLocation();\r\n    return (\r\n        <header className={style.header}>\r\n            <NavLink exact to='/' className={`${style.constructor1} pt-4 pb-4 mr-2`}\r\n                activeClassName={style.active}>\r\n                <button className={style.button}>\r\n                    <div className={`${style.icon} ml-5 mr-2`}><BurgerIcon type={pathname === '/' ? 'primary' : 'secondary'} /></div>\r\n                    <p className={pathname === '/' ? `${style.text__button} text text_type_main-default mr-5 ${style.active}` : `${style.text__button} text text_type_main-default mr-5 text_color_inactive`}>Конструктор</p>\r\n                </button>\r\n            </NavLink>\r\n            <NavLink to='/feed' className={`${style.constructor2} pt-4 pb-4 mr-2`}\r\n                activeClassName={style.active}>\r\n                <button className={style.button}>\r\n                    <div className={`${style.icon} ml-5 mr-2`}><ListIcon type={pathname === '/feed' ? 'primary' : 'secondary'} /></div>\r\n                    <p className={pathname === '/feed' ? `${style.text__button} text text_type_main-default mr-5 ${style.active}` : `${style.text__button} text text_type_main-default mr-5 text_color_inactive`}>Лента заказов</p>\r\n                </button>\r\n            </NavLink>\r\n            <NavLink to='/' className={`${style.constructor3} mt-4 mb-4`}>\r\n                <Logo />\r\n            </NavLink>\r\n            <NavLink to='/profile' className={`${style.constructor4} pt-4 pb-4`}\r\n                activeClassName={style.active}>\r\n                <button className={style.button}>\r\n                    <div className={`${style.icon} ml-5 mr-2`}><ProfileIcon type={pathname === '/profile' || pathname === '/profile/orders' ? 'primary' : 'secondary'} /></div>\r\n                    <p className={pathname === '/profile' || pathname === '/profile/orders' ? `${style.text__button} text text_type_main-default mr-5 ${style.active}` : `${style.text__button} text text_type_main-default mr-5 text_color_inactive`}>Личный кабинет</p>\r\n                </button>\r\n            </NavLink>\r\n        </header>\r\n    )\r\n}\r\nexport default AppHeader;","import { ITypeData } from \"./types\";\r\n\r\nexport function setCookie(name: string, value: string | null, props: { [x: string]: any; expires?: any; } | undefined) {\r\n    props = props || {};\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp.toUTCString) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    if(value) {\r\n        value = encodeURIComponent(value);\r\n    }\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = props[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\nexport function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n        // eslint-disable-next-line no-useless-escape\r\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\nexport function deleteCookie(name: string) {\r\n    setCookie(name, null, { expires: -1 });\r\n}\r\nexport function setTokens(res: any) {\r\n    const accessToken = res.accessToken.split('Bearer ')[1];\r\n    const refreshToken = res.refreshToken;\r\n    setCookie('token', accessToken, {});\r\n    localStorage.setItem('refreshToken', refreshToken);\r\n};\r\n\r\nexport function signOut() {\r\n    localStorage.removeItem('refreshToken');\r\n    deleteCookie('token');\r\n};\r\nexport function setTimeLocalRu(date: string) {\r\n    const createOrderDate = new Date(date);\r\n    const timeZone = `i-GMT${(createOrderDate.getTimezoneOffset() / 60) < 0 ? '+' : '-'}${Math.abs((createOrderDate.getTimezoneOffset() / 60))}`;\r\n    const time = `${createOrderDate.getHours()}:${createOrderDate.getMinutes()}`;\r\n    let timeDay = \"\";\r\n    const oneDay = 1000 * 60 * 60 * 24;\r\n        const dateNow = new Date();\r\n        const diffInTime = dateNow.getTime() - createOrderDate.getTime();\r\n        const diffInDays = Math.round(diffInTime / oneDay);\r\n        switch (diffInDays) {\r\n            case 1: timeDay='Вчера';\r\n                break;\r\n            case 2: timeDay='Позавчера';\r\n                break;\r\n            case 0: timeDay='Сегодня';\r\n                break;\r\n            case 3: timeDay='Позапозавчера';\r\n                break;\r\n            case 4: timeDay='Четыре дня назад';\r\n                break;\r\n            case 5: timeDay='Пять дней назад';\r\n                break;\r\n            case 6: timeDay='Шесть дней назад';\r\n                break;\r\n            case 7: timeDay='Неделю назад';\r\n                break;\r\n            default: timeDay='Больше недели назад';\r\n                break;\r\n        };\r\n        return ({timeDay: timeDay, time: time, timeZone: timeZone});\r\n}\r\nexport function amountOrderAndQuantityIngredients(burgerIngredients: ITypeData[], ingredients: string[]) {\r\n    interface IObjectKeys {\r\n        [key: string]: number;\r\n    }\r\n    const result: IObjectKeys = {}\r\n    ingredients.forEach((ingredient) => {\r\n        if (result[ingredient]) {\r\n            result[ingredient]++;\r\n        }\r\n        else {\r\n            result[ingredient] = 1;\r\n        }\r\n    })\r\n    const resultArray: ITypeData[] = [];\r\n    const keys = Object.keys(result)\r\n    keys.forEach((key) => {\r\n        const ingredient = burgerIngredients.find((item) => item._id === key);\r\n        if (ingredient) {\r\n            ingredient.quantity = result[key];\r\n            resultArray.push(ingredient);\r\n        }\r\n    })\r\n    let amount = 0;\r\n    resultArray.forEach((ingredient) => {\r\n        if (ingredient.quantity) {\r\n            amount += ingredient.quantity * ingredient.price;\r\n        }\r\n    });\r\n    return({amount: amount, resultArray: resultArray});\r\n}","import { getCookie } from \"./utils\";\r\n\r\nconst BASE_URL = \"https://norma.nomoreparties.space/api\";\r\nconst handleResponse = (response: Response) => {\r\n    if (response.ok) return response.json();\r\n    else return Promise.reject(response.status);\r\n}\r\nexport const getIngredients = () => {\r\n    return fetch(`${BASE_URL}/ingredients`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    }).then((res) => handleResponse(res));\r\n}\r\nexport const createOrder = (ingredients: string[]) => {\r\n    return fetch(`${BASE_URL}/orders`, {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            Authorization: `Bearer ${getCookie('token')}`,\r\n          },\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"ingredients\": ingredients\r\n        })\r\n    }).then((res) => handleResponse(res));\r\n}\r\ninterface IRegistrationUser {\r\n    email: string,\r\n    password: string,\r\n    name: string\r\n}\r\nexport const registrationUser= ({ email, password, name }: IRegistrationUser) => {\r\n    return fetch(`${BASE_URL}/auth/register`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            email, password, name\r\n        })\r\n    }).then((res) => handleResponse(res));\r\n}\r\ninterface IAutorizationUser {\r\n    password: string,\r\n    email: string\r\n}\r\nexport const autorizationUser = ({ password, email }: IAutorizationUser) => {\r\n    return fetch(`${BASE_URL}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            password, email\r\n        })\r\n    }).then((res) => handleResponse(res));\r\n}\r\ninterface IForgotPasswordUser {\r\n    email: string\r\n}\r\nexport const forgotPasswordUser = ({ email }: IForgotPasswordUser) => {\r\n    return fetch(`${BASE_URL}/password-reset`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            email\r\n        })\r\n    }).then((res) => handleResponse(res));\r\n}\r\ninterface IResetPasswordUser {\r\n    password: string,\r\n    token: string\r\n}\r\nexport const resetPasswordUser = ({ password, token }: IResetPasswordUser) => {\r\n    return fetch(`${BASE_URL}/password-reset/reset`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            password, token\r\n        })\r\n    }).then((res) => handleResponse(res));\r\n}\r\nexport const logoutUser = () => {\r\n    return fetch(`${BASE_URL}/auth/logout`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            token: localStorage.refreshToken\r\n        })\r\n    }).then((res) => handleResponse(res));\r\n}\r\nexport const refreshToken = () => {\r\n    return fetch(`${BASE_URL}/auth/token`, {\r\n        method: 'POST',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n            token: localStorage.refreshToken\r\n        })\r\n    }).then((res) => handleResponse(res));\r\n}\r\nexport const getUser = () => {\r\n    return fetch(`${BASE_URL}/auth/user`, {\r\n        method: 'GET',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCookie('token')}`,\r\n        }\r\n    }).then((res) => handleResponse(res));\r\n}\r\ninterface IUpdateUser {\r\n    email: string,\r\n    password: string,\r\n    name: string\r\n}\r\nexport const updateUser = ({ email, password, name }: IUpdateUser) => {\r\n    return fetch(`${BASE_URL}/auth/user`, {\r\n        method: 'PATCH',\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${getCookie('token')}`,\r\n        },\r\n        body: JSON.stringify({\r\n            email, password, name\r\n        })\r\n    }).then((res) => handleResponse(res));\r\n}","import type { Middleware, MiddlewareAPI } from 'redux';\r\nimport type { TAppActions, AppDispatch, RootState } from '../../utils/types';\r\nimport { IWsConnectionStart, TWSSocketActions } from '../actions/websocket';\r\n\r\n\r\nexport const socketMiddleware = (wsActions: TWSSocketActions): Middleware => {\r\n  return ((store: MiddlewareAPI<AppDispatch, RootState>) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => (action: TAppActions) => {\r\n      const { dispatch } = store;\r\n      const { type } = action;\r\n      const { wsInit, onOpen, onClose, onError, onMessage } = wsActions;\r\n      if (type === wsInit('someUrl').type) {\r\n        const { payload } = action as IWsConnectionStart\r\n        socket = new WebSocket(payload.url)\r\n      }\r\n      if (socket) {\r\n\r\n        // функция, которая вызывается при открытии сокета\r\n        socket.onopen = event => {\r\n          dispatch(onOpen);\r\n        };\r\n\r\n        // функция, которая вызывается при ошибке соединения\r\n        socket.onerror = event => {\r\n          dispatch(onError)\r\n        };\r\n\r\n        // функция, которая вызывается при получения события от сервера\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData\r\n          dispatch(onMessage(restParsedData))\r\n        };\r\n        // функция, которая вызывается при закрытии соединения\r\n        socket.onclose = event => {\r\n          dispatch(onClose);\r\n        };\r\n\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  }) as Middleware;\r\n};","import * as IngredientApi from '../../utils/IngredientApi';\r\nimport { AppDispatch, AppThunk } from '../../utils/types';\r\nexport const ORDER_REQUEST : 'ORDER_REQUEST' = 'ORDER_REQUEST';\r\nexport const ORDER_SUCCESS : 'ORDER_SUCCESS' = 'ORDER_SUCCESS';\r\nexport const ORDER_ERROR : 'ORDER_ERROR' = 'ORDER_ERROR';\r\n\r\ninterface IOrders {\r\n    name: string,\r\n    success: boolean,\r\n    order: {\r\n        number: number\r\n    }\r\n}\r\ninterface IOrderRequestAction {\r\n    readonly type: typeof ORDER_REQUEST;\r\n}\r\ninterface IOrderSuccessAction {\r\n    readonly type: typeof ORDER_SUCCESS;\r\n    readonly orders: IOrders;\r\n}\r\ninterface IOrderErrorAction {\r\n    readonly type: typeof ORDER_ERROR;\r\n}\r\nexport type TOrdersActions = \r\n| IOrderRequestAction \r\n| IOrderSuccessAction \r\n| IOrderErrorAction;\r\nexport const gerOrder : AppThunk = (idIngredients: string[]) => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: ORDER_REQUEST\r\n        });\r\n        IngredientApi.createOrder(idIngredients)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: ORDER_SUCCESS,\r\n                        orders: res\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: ORDER_ERROR\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: ORDER_ERROR\r\n                });\r\n            })\r\n    };\r\n}","import * as IngredientApi from '../../utils/IngredientApi';\r\nimport { AppDispatch, AppThunk, ITypeData } from '../../utils/types';\r\nexport const GET_ITEMS_REQUEST : 'GET_ITEMS_REQUEST' = 'GET_ITEMS_REQUEST';\r\nexport const GET_ITEMS_SUCCESS : 'GET_ITEMS_SUCCESS' = 'GET_ITEMS_SUCCESS';\r\nexport const GET_ITEMS_ERROR : 'GET_ITEMS_ERROR' = 'GET_ITEMS_ERROR';\r\n\r\ninterface IGetItemsRequestAction {\r\n    readonly type: typeof GET_ITEMS_REQUEST;\r\n}\r\ninterface IGetItemsSuccessAction {\r\n    readonly type: typeof GET_ITEMS_SUCCESS;\r\n    readonly items: ITypeData[];\r\n}\r\ninterface IGetItemsErrorAction {\r\n    readonly type: typeof GET_ITEMS_ERROR;\r\n}\r\nexport type TItemsActions = \r\n| IGetItemsRequestAction \r\n| IGetItemsSuccessAction \r\n| IGetItemsErrorAction;\r\nexport const getItems : AppThunk = () => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: GET_ITEMS_REQUEST\r\n        });\r\n        IngredientApi.getIngredients()\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    localStorage.setItem('burgerIngredients', JSON.stringify(res.data));\r\n                    dispatch({\r\n                        type: GET_ITEMS_SUCCESS,\r\n                        items: res.data\r\n                    });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_ITEMS_ERROR\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: GET_ITEMS_ERROR\r\n                });\r\n            })\r\n    };\r\n}\r\n","import { ITypeData } from \"../../utils/types\";\r\n\r\nexport const DELETE_ITEM : 'DELETE_ITEM'  = 'DELETE_ITEM';\r\nexport const ADDED_ITEM : 'ADDED_ITEM' = 'ADDED_ITEM';\r\nexport const DELETE_ITEM_ON_INDEX : 'DELETE_ITEM_ON_INDEX' = 'DELETE_ITEM_ON_INDEX';\r\nexport const CHANGE_ORDER_INGREDIENT_IN_BURGER : 'CHANGE_ORDER_INGREDIENT_IN_BURGER' = 'CHANGE_ORDER_INGREDIENT_IN_BURGER';\r\nexport const CLEAR_CART : 'CLEAR_CART' = 'CLEAR_CART';\r\n\r\ninterface IDeleteItemAction {\r\n    readonly type: typeof DELETE_ITEM;\r\n    readonly id: string;\r\n}\r\ninterface IAddedItemAction {\r\n    readonly type: typeof ADDED_ITEM;\r\n    readonly item: ITypeData;\r\n}\r\ninterface IDeleteItemOnIndexAction {\r\n    readonly type: typeof DELETE_ITEM_ON_INDEX;\r\n    readonly index: number;\r\n}\r\ninterface IChangeOrderIngredientInBurgerAction {\r\n    readonly type: typeof CHANGE_ORDER_INGREDIENT_IN_BURGER;\r\n    readonly ingredients: ITypeData[];\r\n}\r\ninterface IClearCartAction {\r\n    readonly type: typeof CLEAR_CART;\r\n}\r\nexport type TCartBurgerConstructorActions = \r\n| IDeleteItemAction \r\n| IAddedItemAction \r\n| IDeleteItemOnIndexAction \r\n| IChangeOrderIngredientInBurgerAction \r\n| IClearCartAction;","import * as IngredientApi from '../../utils/IngredientApi';\r\nimport { AppDispatch, AppThunk } from '../../utils/types';\r\nimport { setTokens, signOut } from '../../utils/utils';\r\nexport const USER_REQUEST: 'USER_REQUEST' = 'USER_REQUEST';\r\nexport const USER_REGISTRATION_SUCCESS: 'USER_REGISTRATION_SUCCESS' = 'USER_REGISTRATION_SUCCESS';\r\nexport const USER_REGISTRATION_FAILED: 'USER_REGISTRATION_FAILED' = 'USER_REGISTRATION_FAILED';\r\nexport const USER_REQUEST_SUCCESS: 'USER_REQUEST_SUCCESS' = 'USER_REQUEST_SUCCESS';\r\nexport const USER_REQUEST_FAILED: 'USER_REQUEST_FAILED' = 'USER_REQUEST_FAILED';\r\nexport const FORGOT_PASSWORD_REQUEST: 'FORGOT_PASSWORD_REQUEST' = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS: 'FORGOT_PASSWORD_SUCCESS' = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAILED: 'FORGOT_PASSWORD_FAILED' = 'FORGOT_PASSWORD_FAILED';\r\nexport const RESET_PASSWORD_REQUEST: 'RESET_PASSWORD_REQUEST' = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS: 'RESET_PASSWORD_SUCCESS' = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAILED: 'RESET_PASSWORD_FAILED' = 'RESET_PASSWORD_FAILED';\r\nexport const LOGOUT_REQUEST: 'LOGOUT_REQUEST' = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS: 'LOGOUT_SUCCESS' = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILED: 'LOGOUT_FAILED' = 'LOGOUT_FAILED';\r\nexport const UPDATE_USER_REQUEST: 'UPDATE_USER_REQUEST' = 'UPDATE_USER_REQUEST';\r\nexport const UPDATE_USER_SUCCESS: 'UPDATE_USER_SUCCESS' = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_FAILED: 'UPDATE_USER_FAILED' = 'UPDATE_USER_FAILED';\r\nexport const TOKEN_REQUEST: 'TOKEN_REQUEST' = 'TOKEN_REQUEST';\r\nexport const TOKEN_SUCCESS: 'TOKEN_SUCCESS' = 'TOKEN_SUCCESS';\r\nexport const TOKEN_FAILED: 'TOKEN_FAILED' = 'TOKEN_FAILED';\r\ninterface IUserRequestAction {\r\n    readonly type: typeof USER_REQUEST;\r\n}\r\ninterface IUserRegistrationSuccessAction {\r\n    readonly type: typeof USER_REGISTRATION_SUCCESS;\r\n    readonly user: {\r\n        name: string;\r\n        email: string;\r\n    }\r\n}\r\ninterface IUserRegistrationFailedAction {\r\n    readonly type: typeof USER_REGISTRATION_FAILED;\r\n}\r\ninterface IUserRequestSuccessAction {\r\n    readonly type: typeof USER_REQUEST_SUCCESS;\r\n    readonly user: {\r\n        name: string;\r\n        email: string;\r\n    }\r\n}\r\ninterface IUserRequestFailedAction {\r\n    readonly type: typeof USER_REQUEST_FAILED;\r\n}\r\ninterface IForgotPasswordRequestAction {\r\n    readonly type: typeof FORGOT_PASSWORD_REQUEST;\r\n}\r\ninterface IForgotPasswordSuccessAction {\r\n    readonly type: typeof FORGOT_PASSWORD_SUCCESS;\r\n}\r\ninterface IForgotPasswordFailedAction {\r\n    readonly type: typeof FORGOT_PASSWORD_FAILED;\r\n}\r\ninterface IResetPasswordRequestAction {\r\n    readonly type: typeof RESET_PASSWORD_REQUEST;\r\n}\r\ninterface IResetPasswordSuccessAction {\r\n    readonly type: typeof RESET_PASSWORD_SUCCESS;\r\n}\r\ninterface IResetPasswordFailedAction {\r\n    readonly type: typeof RESET_PASSWORD_FAILED;\r\n}\r\ninterface ILogoutRequestAction {\r\n    readonly type: typeof LOGOUT_REQUEST;\r\n}\r\ninterface ILogoutSuccessAction {\r\n    readonly type: typeof LOGOUT_SUCCESS;\r\n}\r\ninterface ILogoutFailedAction {\r\n    readonly type: typeof LOGOUT_FAILED;\r\n}\r\ninterface IUpdateUserRequestAction {\r\n    readonly type: typeof UPDATE_USER_REQUEST;\r\n}\r\ninterface IUpdateUserSuccessAction {\r\n    readonly type: typeof UPDATE_USER_SUCCESS;\r\n    readonly user: {\r\n        name: string;\r\n        email: string;\r\n    }\r\n}\r\ninterface IUpdateUserFailedAction {\r\n    readonly type: typeof UPDATE_USER_FAILED;\r\n}\r\ninterface ITokenRequestAction {\r\n    readonly type: typeof TOKEN_REQUEST;\r\n}\r\ninterface ITokenSuccessAction {\r\n    readonly type: typeof TOKEN_SUCCESS;\r\n}\r\ninterface ITokenFailedAction {\r\n    readonly type: typeof TOKEN_FAILED;\r\n}\r\nexport type TUserActions =\r\n    | IUserRequestAction\r\n    | IUserRegistrationSuccessAction\r\n    | IUserRegistrationFailedAction\r\n    | IUserRequestSuccessAction\r\n    | IUserRequestFailedAction\r\n    | IForgotPasswordRequestAction\r\n    | IForgotPasswordSuccessAction\r\n    | IForgotPasswordFailedAction\r\n    | IResetPasswordRequestAction\r\n    | IResetPasswordSuccessAction\r\n    | IResetPasswordFailedAction\r\n    | ILogoutRequestAction\r\n    | ILogoutSuccessAction\r\n    | ILogoutFailedAction\r\n    | IUpdateUserRequestAction\r\n    | IUpdateUserSuccessAction\r\n    | IUpdateUserFailedAction\r\n    | ITokenRequestAction\r\n    | ITokenSuccessAction\r\n    | ITokenFailedAction;\r\ninterface IRegistration {\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n}\r\nexport const registration : AppThunk = (data: IRegistration) => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: USER_REQUEST\r\n        });\r\n        IngredientApi.registrationUser(data)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    setTokens(res);\r\n                    dispatch({\r\n                        type: USER_REGISTRATION_SUCCESS,\r\n                        user: res.user\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: USER_REGISTRATION_FAILED\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: USER_REGISTRATION_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\ninterface IAuthorization {\r\n    email: string,\r\n    password: string\r\n}\r\nexport const authorization : AppThunk = (data: IAuthorization) => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: USER_REQUEST\r\n        });\r\n        IngredientApi.autorizationUser(data)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    setTokens(res);\r\n                    dispatch({\r\n                        type: USER_REQUEST_SUCCESS,\r\n                        user: res.user\r\n                    });\r\n                }\r\n                else {\r\n                    console.log('ssss')\r\n                    dispatch({\r\n                        type: USER_REQUEST_FAILED\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: USER_REQUEST_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\ninterface IForgotPassword {\r\n    email: string\r\n}\r\nexport const forgotPassword : AppThunk = (email: IForgotPassword) => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_REQUEST\r\n        });\r\n        IngredientApi.forgotPasswordUser(email)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: FORGOT_PASSWORD_SUCCESS\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: FORGOT_PASSWORD_FAILED\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: FORGOT_PASSWORD_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\ninterface IResetPassword {\r\n    password: string,\r\n    token: string\r\n}\r\nexport const resetPassword : AppThunk = (data: IResetPassword) => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: RESET_PASSWORD_REQUEST\r\n        });\r\n        IngredientApi.resetPasswordUser(data)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: RESET_PASSWORD_SUCCESS\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: RESET_PASSWORD_FAILED\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: RESET_PASSWORD_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\nexport const logout : AppThunk = (callback: () => void) => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: LOGOUT_REQUEST\r\n        });\r\n        IngredientApi.logoutUser()\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: LOGOUT_SUCCESS\r\n                    });\r\n                    signOut();\r\n                    callback();\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: LOGOUT_FAILED\r\n                    });\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: LOGOUT_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\nexport const getNewToken : AppThunk = () => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: TOKEN_REQUEST\r\n        });\r\n        IngredientApi.refreshToken()\r\n            .then((res) => {\r\n                if (res && res.success) {\r\n                    setTokens(res);\r\n                    dispatch({\r\n                        type: TOKEN_SUCCESS\r\n                    });\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: TOKEN_FAILED\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                dispatch({\r\n                    type: TOKEN_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\ninterface IChangeUserProfile {\r\n    email: string,\r\n    password: string,\r\n    name: string\r\n}\r\nexport const changeUserProfile : AppThunk = (data: IChangeUserProfile) => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: UPDATE_USER_REQUEST\r\n        });\r\n        console.log(data)\r\n        IngredientApi.updateUser(data)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: UPDATE_USER_SUCCESS,\r\n                        user: res.user\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: UPDATE_USER_FAILED\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                if (err.message === 'jwt expired' || err.message === 'Token is invalid') {\r\n                    dispatch(getNewToken());\r\n                    dispatch(changeUserProfile(data));\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: UPDATE_USER_FAILED\r\n                    })\r\n                }\r\n            })\r\n    }\r\n}\r\nexport const getUser : AppThunk = () => {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: USER_REQUEST\r\n        });\r\n        IngredientApi.getUser()\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: USER_REQUEST_SUCCESS,\r\n                        user: res.user\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: USER_REQUEST_FAILED\r\n                    })\r\n                }\r\n            }).catch((err) => {\r\n                if (err.message === 'jwt expired' || err.message === 'Token is invalid') {\r\n                    dispatch(getNewToken());\r\n                    dispatch(getUser());\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: USER_REQUEST_FAILED\r\n                    })\r\n                }\r\n            })\r\n    }\r\n}","import { TypedUseSelectorHook, useDispatch as dispatchHook, useSelector as selectorHook } from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from '../../utils/types';\r\n\r\n// Теперь этот хук «знает» структуру хранилища\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\n\r\n// Хук не даст отправить экшен, который ему не знаком\r\nexport const useDispatch = () => dispatchHook < AppDispatch | AppThunk > ();","import React, {FC} from 'react';\r\nimport { DragIcon, CurrencyIcon, LockIcon, DeleteIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './list-item.module.css';\r\nimport { ITypeData } from '../../utils/types';\r\nimport { DELETE_ITEM_ON_INDEX, CHANGE_ORDER_INGREDIENT_IN_BURGER } from '../../services/actions/index';\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from '../../services/hooks/redux-hooks';\r\n\r\ninterface IListItem {\r\n    data: ITypeData,\r\n    isCart: boolean,\r\n    isUp?: boolean,\r\n    index?: number\r\n}\r\nconst ListItem: FC<IListItem> = ({ data, isCart, isUp, index }) => {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const ingredientsInBurger = useSelector((store) => store.cart.ingredients);\r\n    function handleClick(e: React.MouseEvent) {\r\n        e.preventDefault();\r\n        history.push({\r\n            pathname: `/ingredients/${data._id}`,\r\n            state: { background: { pathname: '/' } },\r\n        });\r\n    }\r\n    function deleteClick() {\r\n        dispatch({ type: DELETE_ITEM_ON_INDEX, index: index })\r\n    }\r\n    const [{ isDrag }, dragRef] = useDrag({\r\n        type: \"sauce and main\",\r\n        item: { index },\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n    const [{ isHover }, dropTarget] = useDrop({\r\n        accept: \"sauce and main\",\r\n        drop(itemId: {index: number}) {\r\n            onDropHandler(itemId);\r\n        },\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver(),\r\n        })\r\n    });\r\n    function onDropHandler(id: {index:number}) {\r\n        const result = [];\r\n        for (let i = 0; i < ingredientsInBurger.length; i++) {\r\n            result[i] = ingredientsInBurger[i];\r\n        }\r\n        const dropItem = ingredientsInBurger[id.index];\r\n        if(index) {\r\n            if (id.index > index) {\r\n                result.splice(index, 0, dropItem);\r\n                result.splice(id.index + 1, 1);\r\n            }\r\n            else if (id.index < index) {\r\n                result.splice(index + 1, 0, dropItem);\r\n                result.splice(id.index, 1);\r\n            }\r\n        }\r\n        dispatch({ type: CHANGE_ORDER_INGREDIENT_IN_BURGER, ingredients: result })\r\n    }\r\n    const border = isHover ? '1px solid lightgreen' : '1px solid transparent';\r\n    return (isDrag ? <>\"\"</> :\r\n        <section ref={data.type === 'bun' ? null : dragRef} className={`${style.section} mb-4 mr-2`} style={{ border }}>\r\n            {data.type === 'bun' ? <div className=\"mr-8\"></div> : <div className=\"mr-2\"><DragIcon type=\"primary\" /></div>}\r\n            <div ref={data.type === 'bun' ? null : dropTarget} className={isCart ? style.element_cart : isUp ? style.element_up : style.element_down}>\r\n                <div className={style.left} onClick={handleClick}>\r\n                    <img className={`${style.image} ml-6 mr-5`} src={data.image} alt={data.name} />\r\n                    <p className={`${style.name} text text_type_main-default mr-5`}>{data.name}</p>\r\n                </div>\r\n                <div className={`${style.right} pr-8`}>\r\n                    <div className={`${style.price} mr-5`}>\r\n                        <p className=\"text text_type_digits-default\">{data.price}</p>\r\n                        <CurrencyIcon type=\"primary\" />\r\n                    </div>\r\n                    {data.type === 'bun' ? <LockIcon type=\"secondary\" /> : <DeleteIcon type=\"primary\" onClick={deleteClick} />}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ListItem;","import React, { Dispatch, FC, SetStateAction } from 'react';\r\nimport { CurrencyIcon, Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './burger-constructor.module.css';\r\nimport ListItem from '../list-item/list-item';\r\nimport { gerOrder } from '../../services/actions/index';\r\nimport { useDrop } from \"react-dnd\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { CLEAR_CART } from '../../services/actions/index';\r\nimport { ITypeData } from '../../utils/types';\r\nimport { useDispatch, useSelector } from '../../services/hooks/redux-hooks';\r\n\r\ninterface IPropsConstructorBurger {\r\n    onDropHandler: (data: ITypeData) => void,\r\n    setIsOpenModalOrder: Dispatch<SetStateAction<boolean>>\r\n}\r\nconst BurgerConstructor: FC<IPropsConstructorBurger> = ({ onDropHandler, setIsOpenModalOrder }) => {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n    const burgerStructure = useSelector((store) => store.cart.ingredients);\r\n    const orderError = useSelector((store) => store.order.orderError);\r\n    const isLoggedIn = useSelector((store) => store.user.isLoggedIn);\r\n    const orderRequest = useSelector((store) => store.order.orderRequest);\r\n    const [priceBurger, setPriceBurger] = React.useState(0);\r\n    const result = burgerStructure.find((item: ITypeData) => item.type === 'bun');\r\n    const [disable, setDisable] = React.useState(false);\r\n    React.useEffect(() => {\r\n        if (burgerStructure.length === 0 || orderRequest || !burgerStructure.some((item: ITypeData) => item.type === 'bun')) {\r\n            setDisable(true);\r\n        }\r\n        else {\r\n            setDisable(false);\r\n        }\r\n    }, [burgerStructure, orderRequest])\r\n    function handleOrder() {\r\n        const idIngredients: string[] = [];\r\n        burgerStructure.forEach((item: ITypeData) => {\r\n            if (item.type !== 'bun') {\r\n                idIngredients.push(item._id);\r\n            }\r\n            else {\r\n                idIngredients.push(item._id);\r\n                idIngredients.push(item._id);\r\n            }\r\n        });\r\n        if (isLoggedIn) {\r\n            dispatch(gerOrder(idIngredients));\r\n            if (!orderError) {\r\n                dispatch({ type: CLEAR_CART });\r\n                setIsOpenModalOrder(true);\r\n            }\r\n        }\r\n        else {\r\n            history.push({ pathname: '/login', state: { from: location } });\r\n        }\r\n    }\r\n    React.useEffect(() => {\r\n        let result = 0;\r\n        burgerStructure.forEach((item: ITypeData) => {\r\n            if (item.type !== 'bun') {\r\n                result += item.price;\r\n            }\r\n        });\r\n        const bun = burgerStructure.find((item: ITypeData) => item.type === 'bun');\r\n        if (bun) {\r\n            result += bun.price * 2;\r\n        }\r\n        setPriceBurger(result);\r\n    }, [burgerStructure]);\r\n    const [{ isHover }, dropTarget] = useDrop({\r\n        accept: \"ingredient\",\r\n        drop(itemId: ITypeData) {\r\n            onDropHandler(itemId);\r\n        },\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver(),\r\n        })\r\n    });\r\n    const border = isHover ? '1px solid lightgreen' : '1px solid transparent';\r\n\r\n\r\n    return (\r\n\r\n        <section data-test='burgerConstructor' className={`${style.section} mt-25 ml-4 mr-2 mb-10`} ref={dropTarget} style={{ border }}>\r\n            {result ? <div className=\"mr-2\"><ListItem data={{ ...result, name: result.name + \"\\n(верх)\" }} isCart={false} isUp={true} /></div> : \"\"}\r\n            <div className={style.scroll}>\r\n                {burgerStructure.map((item: ITypeData, index: number) => (\r\n                    item.type === \"bun\" ? \"\" :\r\n                        <ListItem key={index} data={item} index={index} isCart={true} />\r\n                ))}\r\n            </div>\r\n            {result ? <div className=\"mr-2\"><ListItem data={{ ...result, name: result.name + \"\\n(низ)\" }} isCart={false} isUp={false} /></div> : \"\"}\r\n            <div className={`${style.order} mt-6 mr-4`}>\r\n                <div className={`${style.price_order} mr-10`}>\r\n                    <p className={`text text_type_digits-default ${style.text_order}`}>{priceBurger}</p>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                </div>\r\n                <Button disabled={disable} type=\"primary\" size=\"large\" onClick={handleOrder}>\r\n                    Оформить заказ\r\n                </Button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default BurgerConstructor;\r\n","import React, {FC} from 'react';\r\nimport { Counter, CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './ingredient.module.css';\r\nimport { ITypeData } from '../../utils/types';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { useSelector } from '../../services/hooks/redux-hooks';\r\n\r\ninterface IIngredient {\r\n    data: ITypeData\r\n}\r\n\r\nconst Ingredient: FC<IIngredient> = ({ data }) => {\r\n    const history = useHistory();\r\n    const ingredientsInBurger = useSelector((store) => store.cart.ingredients);\r\n    const [count, setCount] = React.useState(0);\r\n    const { _id } = data;\r\n    function handleClick() {\r\n        history.push({\r\n            pathname: `/ingredients/${data._id}`,\r\n            state: { background: { pathname: '/' } },\r\n        });\r\n    }\r\n    const [{ isDrag }, dragRef] = useDrag({\r\n        type: \"ingredient\",\r\n        item: { _id },\r\n        collect: monitor => ({\r\n            isDrag: monitor.isDragging()\r\n        })\r\n    });\r\n    React.useEffect(() => {\r\n        const result = { qty: 0 };\r\n        ingredientsInBurger.forEach((item: ITypeData) => {\r\n            if (item._id === data._id) {\r\n                result.qty++;\r\n            }\r\n        });\r\n        if (data.type === 'bun') {\r\n            setCount(result.qty * 2);\r\n        }\r\n        else {\r\n            setCount(result.qty);\r\n        }\r\n    }, [ingredientsInBurger, data._id, data.type]);\r\n    return (isDrag ? <>\"\"</> :\r\n        <div onClick={handleClick} className={style.card} ref={dragRef}>\r\n            <img className={`${style.image} pl-4 pr-4 mb-1`} src={data.image} alt={data.name} />\r\n            <div className={`${style.price} mb-1`}>\r\n                <p className={`${style.digits} text text_type_digits-default`}>{data.price}</p>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            <p className={`${style.name} text text_type_main-default`}>{data.name}</p>\r\n            <Counter count={count} size=\"default\" />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Ingredient;","import React, {FC, useRef} from 'react';\r\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './burger-ingredients.module.css';\r\nimport Ingredient from '../ingredient/ingredient';\r\nimport { ITypeData } from '../../utils/types';\r\nimport { useSelector } from '../../services/hooks/redux-hooks';\r\n\r\nconst BurgerIngredients: FC = () => {\r\n    const [current, setCurrent] = React.useState('one');\r\n    const burgerIngredients: ITypeData[] = useSelector((store) => store.items.items);\r\n    React.useEffect(() => {\r\n        const box = document.getElementById('box') as HTMLElement;\r\n        const one = document.getElementById('one') as HTMLElement;\r\n        const two = document.getElementById('two') as HTMLElement;\r\n        const three = document.getElementById('three') as HTMLElement;\r\n        let boxRect = box.getBoundingClientRect();\r\n        function MathCoordinates() {\r\n            let itemRect1 = one.getBoundingClientRect();\r\n            let itemRect2 = two.getBoundingClientRect();\r\n            let itemRect3 = three.getBoundingClientRect();\r\n            let heightRect1 = Math.abs(itemRect1.y - boxRect.y);\r\n            let heightRect2 = Math.abs(itemRect2.y - boxRect.y);\r\n            let heightRect3 = Math.abs(itemRect3.y - boxRect.y);\r\n            if (heightRect1 <= heightRect2 && heightRect1 <= heightRect3) {\r\n                setCurrent('one');\r\n            }\r\n            else if (heightRect2 <= heightRect1 && heightRect2 <= heightRect3) {\r\n                setCurrent('two');\r\n            }\r\n            else {\r\n                setCurrent('three');\r\n            }\r\n        }\r\n        box.addEventListener(\"scroll\", MathCoordinates);\r\n        return () => box.removeEventListener('scroll', MathCoordinates);\r\n    }, []);\r\n    \r\n    const bunRef = useRef<HTMLDivElement>(null);\r\n    const sauceRef = useRef<HTMLDivElement>(null);\r\n    const mainRef = useRef<HTMLDivElement>(null);\r\n    const handleClick: (arg: string) => void = (current) => {\r\n        if (current === 'one') bunRef.current?.scrollIntoView({behavior: 'smooth'});\r\n        if (current === 'two') sauceRef.current?.scrollIntoView({behavior: 'smooth'});\r\n        if (current === 'three') mainRef.current?.scrollIntoView({behavior: 'smooth'});\r\n      };\r\n    return (\r\n        <section className={`${style.section} mr-10 mb-5`}>\r\n            <h1 className={`${style.title} mt-10 text text_type_main-large`}>Соберите бургер</h1>\r\n            <nav className={`${style.nav} mb-10`}>\r\n                <Tab value=\"one\" active={current === 'one'} onClick={handleClick}>\r\n                    Булки\r\n                </Tab>\r\n                <Tab value=\"two\" active={current === 'two'} onClick={handleClick}>\r\n                    Соусы\r\n                </Tab>\r\n                <Tab value=\"three\" active={current === 'three'} onClick={handleClick}>\r\n                    Начинки\r\n                </Tab>\r\n            </nav>\r\n            <div className={style.scroll} id=\"box\">\r\n                <h2 className=\"mb-6 text text_type_main-medium\" id='one' ref={bunRef}>Булки</h2>\r\n                <div className={`${style.collection} mb-10 ml-4 mr-4`}>\r\n                    {burgerIngredients.map((item: ITypeData) => (\r\n                        item.type === \"bun\" ?\r\n                            <Ingredient key={item._id} data={item} />\r\n                            : \"\"\r\n                    ))}\r\n                </div>\r\n                <h2 className=\"mb-6 text text_type_main-medium\" id='two' ref={sauceRef}>Соусы</h2>\r\n                <div className={`${style.collection} mb-10 ml-4 mr-4`}>\r\n                    {burgerIngredients.map((item: ITypeData) => (\r\n                        item.type === \"sauce\" ?\r\n                            <Ingredient key={item._id} data={item} />\r\n                            : \"\"\r\n                    ))}\r\n                </div>\r\n                <h2 className=\"mb-6 text text_type_main-medium\" id='three' ref={mainRef}>Начинки</h2>\r\n                <div className={`${style.collection} mb-10 ml-4 mr-4`}>\r\n                    {burgerIngredients.map((item: ITypeData) => (\r\n                        item.type === \"main\" ?\r\n                            <Ingredient key={item._id} data={item} />\r\n                            : \"\"\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\nexport default BurgerIngredients;","import React, {FC} from 'react';\r\nimport style from './order-details.module.css';\r\nimport { useSelector } from '../../services/hooks/redux-hooks';\r\n\r\nconst OrderDetails : FC = () => {\r\n    const numberOrder = useSelector((store) => store.order.orderNumber);\r\n    return (\r\n        <section className={`${style.order} mt-4`}>\r\n            <h2 className={`${style.content} text text_type_digits-large mb-8`}>{numberOrder}</h2>\r\n            <p className={`${style.content} mb-15 text text_type_main-medium`}>идентификатор заказа</p>\r\n            <div className={style.image}></div>\r\n            <p className={`${style.content} mt-15 text text_type_main-default`}>Ваш заказ начали готовить\"</p>\r\n            <p className={`${style.content} mt-2 mb-30 text text_type_main-default text_color_inactive`}>Дождитесь готовности на орбитальной станции</p>\r\n        </section>\r\n\r\n    )\r\n};\r\nexport default OrderDetails;","import React, {FC} from 'react';\r\nimport style from './ingredient-details.module.css';\r\nimport { useParams } from 'react-router-dom';\r\nimport { ITypeData } from '../../utils/types';\r\n\r\nconst IngredientDetails: FC = () => {\r\n    const { id } = useParams<{id: string}>();\r\n    const dataStorage = localStorage.getItem('burgerIngredients');\r\n    if(dataStorage) {\r\n        const data = JSON.parse(dataStorage).find((item: ITypeData) => item._id === id)\r\n        return (\r\n            <section className={style.section}>\r\n                <img className={`${style.image} mb-4`} src={data.image} alt={data.name} />\r\n                <h3 className={`${style.title} text text_type_main-medium mb-8`}>{data.name}</h3>\r\n                <ul className={`${style.list} mb-15`}>\r\n                    <li className={`${style.element} mr-5`}>\r\n                        <p className={`${style.content} text text_type_main-default text_color_inactive mb-2`}>Калории,ккал</p>\r\n                        <p className={`${style.content} text text_type_digits-default text_color_inactive`}>{data.calories}</p>\r\n                    </li>\r\n                    <li className={`${style.element} mr-5`}>\r\n                        <p className={`${style.content} text text_type_main-default text_color_inactive mb-2`}>Белки, г</p>\r\n                        <p className={`${style.content} text text_type_digits-default text_color_inactive`}>{data.proteins}</p>\r\n                    </li>\r\n                    <li className={`${style.element} mr-5`}>\r\n                        <p className={`${style.content} text text_type_main-default text_color_inactive mb-2`}>Жиры, г</p>\r\n                        <p className={`${style.content} text text_type_digits-default text_color_inactive`}>{data.fat}</p>\r\n                    </li>\r\n                    <li className={`${style.element} mr-5`}>\r\n                        <p className={`${style.content} text text_type_main-default text_color_inactive mb-2`}>Углеводы, г</p>\r\n                        <p className={`${style.content} text text_type_digits-default text_color_inactive`}>{data.carbohydrates}</p>\r\n                    </li>\r\n                </ul>\r\n            </section>\r\n        )\r\n    }\r\n    else {\r\n        return (<></>)\r\n    }\r\n\r\n\r\n    \r\n}\r\nexport default IngredientDetails;","import React, {FC} from 'react';\r\nimport style from './modal-overlay.module.css';\r\n\r\ninterface IModalOverlay {\r\n    closeModal: () => void\r\n}\r\nconst ModalOverlay: FC<IModalOverlay> = ({ children, closeModal }) => {\r\n    function handleClick() {\r\n        closeModal();\r\n    }\r\n    return (\r\n        <section className={style.section}\r\n            onClick={e => (e.currentTarget === e.target) && handleClick()}>\r\n            {children}\r\n        </section>\r\n    )\r\n};\r\n\r\nexport default ModalOverlay;","import React, {FC} from 'react';\r\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './modal.module.css';\r\nimport ModalOverlay from '../modal-overlay/modal-overlay';\r\n\r\ninterface IModal {\r\n    title: string,\r\n    closeModal: () => void\r\n}\r\nconst Modal: FC<IModal> = ({ title, children, closeModal }) => {\r\n    React.useEffect(() => {\r\n        document.addEventListener('keydown', closeESC)\r\n        return () => document.removeEventListener('keydown', closeESC)\r\n    })\r\n    const EscCode = 27;\r\n    function closeESC(evt: KeyboardEvent) {\r\n        if (evt.keyCode === EscCode) {\r\n            closeModal();\r\n        }\r\n    }\r\n    function handleClick() {\r\n        closeModal();\r\n    }\r\n    return (\r\n        <ModalOverlay closeModal={closeModal}>\r\n            <section className={style.section}>\r\n                <div className={`${style.container} pl-10 pt-10 pr-10`}>\r\n                    <h3 className=\"text text_type_main-large\">{title}</h3>\r\n                    <div className='CloseIcon'>\r\n                    <CloseIcon type=\"primary\" onClick={handleClick} />\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </section>\r\n        </ModalOverlay>\r\n\r\n    )\r\n};\r\n\r\nexport default Modal;","import React, {FC} from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport style from './not-found.module.css';\r\nconst NotFound: FC = () => {\r\n    const history = useHistory();\r\n    function handleClickLink() {\r\n        history.goBack();\r\n    }\r\n    return (\r\n        <section className={style.section}>\r\n            <h1 className=\"text text_type_main-default mb-6\">404</h1>\r\n            <p className=\"text text_type_main-default mb-6\">Страница не найдена</p>\r\n            <Link to=\"\" onClick={handleClickLink} className=\"text text_type_main-default\">Назад</Link>\r\n        </section>\r\n    )\r\n};\r\nexport default NotFound;","import React, { ChangeEvent, FC, FormEvent } from \"react\";\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { Button, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './login.module.css';\r\nimport { authorization } from \"../../services/actions\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks/redux-hooks\";\r\n\r\ninterface ILocationState {\r\n    from: {\r\n      pathname: string;\r\n    };\r\n  }\r\nconst Login: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector((store) => store.user.isLoggedIn);\r\n    const location = useLocation<ILocationState>();\r\n    const [inputValue, setInputValue] = React.useState({ email: '', password: '' });\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    };\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(authorization(inputValue));\r\n    };\r\n    return (<>\r\n        {isLoggedIn ? (\r\n            <Redirect to={location.state?.from || '/'} />\r\n        ) : (\r\n            <section className={style.section}>\r\n                <form className={style.form} onSubmit={handleSubmit}>\r\n                    <h2 className=\"text text_type_main-medium mb-6\">Вход</h2>\r\n                    <Input type=\"email\" placeholder=\"E-mail\" name=\"email\" value={inputValue.email} onChange={handleChange} />\r\n                    <PasswordInput name=\"password\" value={inputValue.password} onChange={handleChange} />\r\n                    <Button type='primary' size='medium'>Войти</Button>\r\n                </form>\r\n                <div className={`${style.links} mt-20`}>\r\n                    <div className={`${style.link_container} mb-4`}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">Вы — новый пользователь?&nbsp;</p>\r\n                        <Link className={`text text_type_main-default ${style.link}`} to='/register'>Зарегистрироваться</Link>\r\n                    </div>\r\n                    <div className={style.link_container}>\r\n                        <p className=\"text text_type_main-default text_color_inactive\">Забыли пароль?&nbsp;</p>\r\n                        <Link className={`text text_type_main-default ${style.link}`} to='/forgot-password'>Восстановить пароль</Link>\r\n                    </div>\r\n                </div>\r\n            </section>)}\r\n    </>\r\n    )\r\n};\r\nexport default Login;\r\n","import React, { ChangeEvent, FC, FormEvent } from \"react\";\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { Button, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './register.module.css';\r\nimport { registration } from \"../../services/actions\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks/redux-hooks\";\r\n\r\ninterface ILocationState {\r\n    from: {\r\n      pathname: string;\r\n    };\r\n  }\r\nconst Register: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector((store) => store.user.isLoggedIn);\r\n    const location = useLocation<ILocationState>();\r\n    const [inputValue, setInputValue] = React.useState({ email: '', password: '', name: '' });\r\n    if (isLoggedIn) {\r\n        return <Redirect to={location.state?.from || '/'} />;\r\n    }\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    };\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(registration(inputValue));\r\n    };\r\n    return (\r\n        <section className={style.section}>\r\n            <form className={style.form} onSubmit={handleSubmit}>\r\n                <h2 className=\"text text_type_main-medium mb-6\">Регистрация</h2>\r\n                <Input type=\"text\" placeholder=\"Имя\" name=\"name\" value={inputValue.name} onChange={handleChange} />\r\n                <Input type=\"email\" placeholder=\"E-mail\" name=\"email\" value={inputValue.email} onChange={handleChange} />\r\n                <PasswordInput name=\"password\" value={inputValue.password} onChange={handleChange} />\r\n                <Button type='primary' size='medium'>Зарегистрироваться</Button>\r\n            </form>\r\n            <div className={`${style.link_container} mt-20`}>\r\n                <p className=\"text text_type_main-default text_color_inactive\">Уже зарегистрированы?&nbsp;</p>\r\n                <Link className={`${style.link} text text_type_main-default`} to='/login'>Войти</Link>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default Register;\r\n","import React, {ChangeEvent, FC, FormEvent} from \"react\";\r\nimport { Link, Redirect, useLocation } from 'react-router-dom';\r\nimport { Button, Input } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './forgot-password.module.css';\r\nimport { forgotPassword } from \"../../services/actions\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks/redux-hooks\";\r\n\r\ninterface ILocationState {\r\n    from: {\r\n      pathname: string;\r\n    };\r\n  }\r\nconst ForgotPassword: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const isLoggedIn = useSelector((store) => store.user.isLoggedIn);\r\n    const isForgotPassword = useSelector((store) => store.user.isForgotPassword);\r\n    const location = useLocation<ILocationState>();\r\n    const [inputValue, setInputValue] = React.useState({ email: '' });\r\n    if (isLoggedIn) {\r\n        return <Redirect to={location.state?.from || '/'} />;\r\n    }\r\n    if (!isLoggedIn && isForgotPassword) {\r\n        return <Redirect to='/reset-password' />;\r\n    }\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    };\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(forgotPassword(inputValue));\r\n    };\r\n    return (\r\n        <section className={style.section}>\r\n            <form className={style.form} onSubmit={handleSubmit}>\r\n                <h2 className=\"text text_type_main-medium mb-6\">Восстановление пароля</h2>\r\n                <Input type=\"email\" placeholder=\"Укажите e-mail\" name=\"email\" value={inputValue.email} onChange={handleChange} />\r\n                <Button type='primary' size='medium'>Восстановить</Button>\r\n            </form>\r\n            <div className={`${style.link_container} mt-20`}>\r\n                <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль?&nbsp;</p>\r\n                <Link className={`${style.link} text text_type_main-default`} to='/login'>Войти</Link>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default ForgotPassword;\r\n","import React, { ChangeEvent, FC, FormEvent } from \"react\";\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Button, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './reset-password.module.css';\r\nimport { resetPassword } from \"../../services/actions\";\r\nimport { useDispatch, useSelector } from \"../../services/hooks/redux-hooks\";\r\n\r\nconst ResetPassword: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const isForgotPassword = useSelector((store) => store.user.isForgotPassword);\r\n    const isResetPassword = useSelector((store) => store.user.isResetPassword);\r\n    const [inputValue, setInputValue] = React.useState({ password: '', token: '' });\r\n    if (isResetPassword) {\r\n        return <Redirect to='/login' />;\r\n    }\r\n    if (!isForgotPassword && !isResetPassword) {\r\n        return <Redirect to='/forgot-password' />;\r\n    }\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    };\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(resetPassword(inputValue));\r\n    };\r\n    return (\r\n        <section className={style.section}>\r\n            <form className={style.form} onSubmit={handleSubmit}>\r\n                <h2 className=\"text text_type_main-medium mb-6\">Восстановление пароля</h2>\r\n                <PasswordInput name=\"password\" value={inputValue.password} onChange={handleChange} size={'default'} />\r\n                <Input type=\"text\" placeholder=\"Введите код из письма\" name=\"token\" value={inputValue.token} onChange={handleChange} size={'default'} />\r\n                <Button type='primary' size='medium'>Сохранить</Button>\r\n            </form>\r\n            <div className={`${style.link_container} mt-20`}>\r\n                <p className=\"text text_type_main-default text_color_inactive\">Вспомнили пароль?&nbsp;</p>\r\n                <Link className={`${style.link} text text_type_main-default`} to='/login'>Войти</Link>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default ResetPassword;\r\n","import React, {ChangeEvent, FC, FormEvent} from 'react';\r\nimport { Button, Input, PasswordInput } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport style from './user-profile.module.css';\r\nimport { changeUserProfile } from '../../services/actions';\r\nimport { useDispatch, useSelector } from '../../services/hooks/redux-hooks';\r\n\r\nconst UserProfile: FC = () => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((store) => store.user);\r\n    const [isChangeField, setIsChangeField] = React.useState(false);\r\n    const [inputValue, setInputValue] = React.useState({ email: '', password: '', name: '' });\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    };\r\n    const handleReset = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        setInputValue({\r\n            email: user.email,\r\n            password: '',\r\n            name: user.name\r\n        });\r\n    }\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(changeUserProfile(inputValue));\r\n    };\r\n    React.useEffect(() => {\r\n        if (inputValue.email !== user.email || inputValue.password !== \"\" || inputValue.name !== user.name) {\r\n            setIsChangeField(true)\r\n        }\r\n        else {\r\n            setIsChangeField(false)\r\n        }\r\n    }, [inputValue, user]);\r\n    React.useEffect(() => {\r\n        setInputValue({\r\n            email: user.email,\r\n            password: '',\r\n            name: user.name\r\n        })\r\n    }, [user]);\r\n    return (\r\n        <form className={style.form} onSubmit={handleSubmit}>\r\n            <Input type=\"text\" placeholder=\"Имя\" name=\"name\" value={inputValue.name} onChange={handleChange} icon='EditIcon' />\r\n            <Input type=\"email\" placeholder=\"Логин\" name=\"email\" value={inputValue.email} onChange={handleChange} icon='EditIcon' />\r\n            <PasswordInput name=\"password\" value={inputValue.password} onChange={handleChange} />\r\n            {isChangeField ?\r\n                <>\r\n                    <Button type='secondary' size='medium' onClick={handleReset}>Отмена</Button>\r\n                    <Button type='primary' size='medium'>Сохранить</Button>\r\n                </>\r\n                :\r\n                \"\"}\r\n        </form>\r\n    )\r\n};\r\nexport default UserProfile;","import React, { FC } from 'react';\r\nimport style from './order-in-profile.module.css';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ITypeData, ITypeOrder } from '../../utils/types';\r\nimport { amountOrderAndQuantityIngredients, setTimeLocalRu } from '../../utils/utils';\r\nimport { useSelector } from '../../services/hooks/redux-hooks';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface IOrderInProfile {\r\n    order: ITypeOrder\r\n}\r\nconst OrderInProfile: FC<IOrderInProfile> = ({ order }) => {\r\n    const burgerIngredients: ITypeData[] = useSelector((store) => store.items.items);\r\n    const [timeZone, setTimeZone] = React.useState('');\r\n    const [time, setTime] = React.useState('');\r\n    const [timeDay, setTimeDay] = React.useState('');\r\n    const [sumOrder, setSumOrder] = React.useState(0);\r\n    const [ingredientsInOrder, setIngredientsInOrder] = React.useState < ITypeData[] > ([]);\r\n    const [statusOrder, setStatusOrder] = React.useState('');\r\n    React.useEffect(() => {\r\n        const timeLocal = setTimeLocalRu(order.createdAt);\r\n        setTimeZone(timeLocal.timeZone);\r\n        setTime(timeLocal.time);\r\n        setTimeDay(timeLocal.timeDay);\r\n        const amountAndArray = amountOrderAndQuantityIngredients(burgerIngredients, order.ingredients);\r\n        if (amountAndArray.resultArray.length > 5) {\r\n            setIngredientsInOrder(amountAndArray.resultArray.slice(0, 5));\r\n        }\r\n        else {\r\n            setIngredientsInOrder(amountAndArray.resultArray);\r\n        }\r\n        setSumOrder(amountAndArray.amount);\r\n        const status = order.status;\r\n        switch (status) {\r\n            case 'done': setStatusOrder('Выполнен');\r\n                break;\r\n            case 'created': setStatusOrder('Создан');\r\n                break;\r\n            case 'pending': setStatusOrder('Готовится');\r\n                break;\r\n            case 'cancelled': setStatusOrder('Отменен');\r\n                break;\r\n            default: setStatusOrder('Неизвестно');\r\n                break;\r\n        }\r\n    }, [])\r\n    return (\r\n        <Link className={style.link} to={{ pathname: `/profile/orders/${order._id}`, state: { background: { pathname: '/profile/orders' } } }}>\r\n            <section className={style.section}>\r\n                <div className={style.top}>\r\n                    <p className='text text_type_digits-default'>#{order.number}</p>\r\n                    <p className='text text_type_main-default text_color_inactive'>{timeDay}, {time} {timeZone}</p>\r\n                </div>\r\n                <p className='text text_type_main-medium mb-2 mt-6 pr-6 pl-6'>{order.name}</p>\r\n                <p className={statusOrder === 'Выполнен' ? `text text_type_main-small mb-6 text_color_success pr-6 pl-6` : `text text_type_main-small mb-6 pr-6 pl-6`}>{statusOrder}</p>\r\n                <div className={style.bottom}>\r\n                    <div className={style.images}>\r\n                        {\r\n                            ingredientsInOrder.map((ingredient, index) => (\r\n                                <img className={`${style.image} ml-6 mr-5`} key={index} src={ingredient.image} alt={ingredient.name} />\r\n                            )\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className={style.price}>\r\n                        <p className='text text_type_digits-default mr-2'>{sumOrder}</p>\r\n                        <CurrencyIcon type='primary' />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </Link>\r\n    )\r\n};\r\nexport default OrderInProfile;\r\n","import { IOrdersFromSocket } from \"../../utils/types\";\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' = 'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' = 'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_MESSAGE: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_MESSAGE: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\nexport const wsActions = {\r\n    wsInit: (url: string) => ({ type: WS_CONNECTION_START, payload: { url } }),\r\n    onOpen: { type: WS_CONNECTION_SUCCESS },\r\n    onClose: { type: WS_CONNECTION_CLOSED },\r\n    onError: { type: WS_CONNECTION_ERROR },\r\n    onMessage: (msg: IOrdersFromSocket) => ({ type: WS_GET_MESSAGE, payload: msg }),\r\n};\r\nexport interface IWsConnectionStart {\r\n    readonly type: typeof WS_CONNECTION_START;\r\n    readonly payload: {\r\n        url: string\r\n    }\r\n}\r\ninterface IWsConnectionSuccess {\r\n    readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\ninterface IWsConnectionError {\r\n    readonly type: typeof WS_CONNECTION_ERROR;\r\n}\r\ninterface IWsConnectionClosed {\r\n    readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\ninterface IWsGetMessage {\r\n    readonly type: typeof WS_GET_MESSAGE;\r\n    readonly payload: IOrdersFromSocket;\r\n}\r\ninterface IWsSendMessage {\r\n    readonly type: typeof WS_SEND_MESSAGE;\r\n}\r\nexport type TWSActions =\r\n    | IWsConnectionStart\r\n    | IWsConnectionSuccess\r\n    | IWsConnectionError\r\n    | IWsConnectionClosed\r\n    | IWsGetMessage\r\n    | IWsSendMessage;\r\nexport type TWSSocketActions = {\r\n    wsInit: (url: string) => IWsConnectionStart\r\n    onOpen: IWsConnectionSuccess\r\n    onClose: IWsConnectionClosed\r\n    onError: IWsConnectionError\r\n    onMessage: (msg: IOrdersFromSocket) => IWsGetMessage\r\n}","export const wsUrl = 'wss://norma.nomoreparties.space/orders';","import React, { FC } from 'react';\r\nimport { Route, Switch, NavLink, useLocation, useHistory } from 'react-router-dom';\r\nimport style from './profile.module.css';\r\nimport UserProfile from '../../components/user-profile/user-profile';\r\nimport { logout } from '../../services/actions';\r\nimport OrderInProfile from '../../components/order-in-profile/order-in-profile';\r\nimport { useDispatch, useSelector } from '../../services/hooks/redux-hooks';\r\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../../services/actions/websocket';\r\nimport { wsUrl } from '../../utils/constants';\r\nimport { getCookie } from '../../utils/utils';\r\n\r\nconst Profile: FC = () => {\r\n    const { pathname } = useLocation();\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const handleClick = (e: React.MouseEvent) => {\r\n        e.preventDefault();\r\n        dispatch(logout(() => {\r\n            history.push('/login');\r\n        }))\r\n    }\r\n    const token = getCookie('token');\r\n    React.useEffect(() => {\r\n        dispatch({ type: WS_CONNECTION_START, payload: { url: `${wsUrl}?token=${token}` } });\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSED });\r\n        };\r\n    }, [dispatch, token]);\r\n    const { orders } = useSelector((store) => store.socket.messages);\r\n    return (\r\n        <section className={style.section}>\r\n            <div className={style.flex}>\r\n                <nav className={`${style.nav} mr-15 mb-20`}>\r\n                    <NavLink exact to='/profile'\r\n                        className={pathname === '/profile'\r\n                            ?\r\n                            `${style.link} text text_type_main-medium ${style.active}`\r\n                            :\r\n                            `${style.link} text text_type_main-medium ${style.color}`}>\r\n                        Профиль\r\n                    </NavLink>\r\n                    <NavLink exact to='/profile/orders'\r\n                        className={pathname === '/profile/orders'\r\n                            ?\r\n                            `${style.link} text text_type_main-medium ${style.active}`\r\n                            :\r\n                            `${style.link} text text_type_main-medium ${style.color}`} >\r\n                        История заказов\r\n                    </NavLink>\r\n                    <nav onClick={handleClick} className={`${style.link} text text_type_main-medium ${style.color}`}>\r\n                        Выход\r\n                    </nav>\r\n                </nav>\r\n                <Switch>\r\n                    <Route path='/profile' exact={true}>\r\n                        <UserProfile />\r\n                    </Route>\r\n                    <Route path='/profile/orders' exact={true}>\r\n                        <div className={style.scroll}>\r\n                            {orders ? \r\n                                orders.map((order) => (\r\n                                    <OrderInProfile order={order} key={order._id} />\r\n                                )) : \"\"\r\n                            }\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\nexport default Profile;","import React, {FC} from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks/redux-hooks';\r\n\r\ninterface IProtectedRoute {\r\n    path: string,\r\n    exact: boolean\r\n}\r\nconst ProtectedRoute: FC<IProtectedRoute>= ({ children, ...rest }) => {\r\n    const isLoggedIn = useSelector((store) => store.user.isLoggedIn);\r\n\r\n    return (\r\n        <Route {...rest}\r\n            render={({ location }) =>\r\n                isLoggedIn ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect to={{ pathname: '/login', state: { from: location } }} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\nexport default ProtectedRoute;\r\n","import React, { FC } from 'react';\r\nimport IngredientDetails from '../../components/ingredient-details/ingredient-details';\r\nimport style from './ingredient.module.css';\r\n\r\nconst Ingredient: FC = () => {\r\n    return (\r\n        <section className={style.section}>\r\n            <h1 className={`${style.text_title} text text_type_main-large`}>Детали ингредиента</h1>\r\n            <IngredientDetails />\r\n        </section>\r\n    )\r\n}\r\nexport default Ingredient;","import React, { FC } from 'react';\r\nimport style from './order-in-feed.module.css';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ITypeData, ITypeOrder } from '../../utils/types';\r\nimport { amountOrderAndQuantityIngredients, setTimeLocalRu } from '../../utils/utils';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from '../../services/hooks/redux-hooks';\r\n\r\ninterface IOrderInFeed {\r\n    order: ITypeOrder\r\n}\r\nconst OrderInFeed: FC<IOrderInFeed> = ({order}) => {\r\n    const burgerIngredients: ITypeData[] = useSelector((store) => store.items.items);\r\n    const [timeZone, setTimeZone] = React.useState('');\r\n    const [time, setTime] = React.useState('');\r\n    const [timeDay, setTimeDay] = React.useState('');\r\n    const [sumOrder, setSumOrder] = React.useState(0);\r\n    const [ingredientsInOrder, setIngredientsInOrder] = React.useState < ITypeData[] > ([]);\r\n    React.useEffect(() => {\r\n        const timeLocal = setTimeLocalRu(order.createdAt);\r\n        setTimeZone(timeLocal.timeZone);\r\n        setTime(timeLocal.time);\r\n        setTimeDay(timeLocal.timeDay);\r\n        const amountAndArray = amountOrderAndQuantityIngredients(burgerIngredients, order.ingredients);\r\n        if (amountAndArray.resultArray.length > 5) {\r\n            setIngredientsInOrder(amountAndArray.resultArray.slice(0, 5));\r\n        }\r\n        else {\r\n            setIngredientsInOrder(amountAndArray.resultArray);\r\n        }\r\n        setSumOrder(amountAndArray.amount);\r\n    }, [])\r\n    return (\r\n        <Link className={style.link} to={{ pathname: `/feed/${order._id}`, state: { background: { pathname: '/feed' } } }}>\r\n<section className={style.section}>\r\n            <div className={style.top}>\r\n                <p className='text text_type_digits-default'>#{order.number}</p>\r\n                <p className='text text_type_main-default text_color_inactive'>{timeDay}, {time} {timeZone}</p>\r\n            </div>\r\n            <p className='text text_type_main-medium mb-6 mt-6 pr-6 pl-6'>{order.name}</p>\r\n            <div className={style.bottom}>\r\n                <div className={style.images}>\r\n                    {\r\n                        ingredientsInOrder.map((ingredient, index) => (\r\n                            <img className={`${style.image} ml-6 mr-5`} key={index} src={ingredient.image} alt={ingredient.name} />\r\n                        )\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className={style.price}>\r\n                    <p className='text text_type_digits-default mr-2'>{sumOrder}</p>\r\n                    <CurrencyIcon type='primary' />\r\n                </div>\r\n            </div>\r\n        </section>\r\n        </Link>\r\n        \r\n    )\r\n};\r\nexport default OrderInFeed;\r\n","import React, { FC } from 'react';\r\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../../services/actions/websocket';\r\nimport { useDispatch, useSelector } from '../../services/hooks/redux-hooks';\r\nimport { wsUrl } from '../../utils/constants';\r\nimport { ITypeOrder } from '../../utils/types';\r\nimport OrderInFeed from '../../components/order-in-feed/order-in-feed';\r\nimport style from './feed.module.css';\r\n\r\nconst Feed: FC = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        dispatch({ type: WS_CONNECTION_START, payload: { url: `${wsUrl}/all` } });\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSED });\r\n        };\r\n    }, [dispatch]);\r\n    const { orders, total, totalToday } = useSelector((store) => store.socket.messages);\r\n    const [ordersDone, setOrdersDone] = React.useState < ITypeOrder[] > ([]);\r\n    const [ordersPending, setOrdersPending] = React.useState < ITypeOrder[] > ([]);\r\n    React.useEffect(() => {\r\n        const resultOrdersDone: ITypeOrder[] = [];\r\n        const resultOrdersPending: ITypeOrder[] = [];\r\n        orders.forEach((order) => {\r\n            if (order.status === 'done') {\r\n                resultOrdersDone.push(order);\r\n            }\r\n            else if (order.status === 'pending') {\r\n                resultOrdersPending.push(order);\r\n            }\r\n        })\r\n        const resultSortedOrdersDone = resultOrdersDone.sort((a, b) => a.number - b.number);\r\n        const resultSortedOrdersPending = resultOrdersPending.sort((a, b) => a.number - b.number);\r\n        setOrdersDone(resultSortedOrdersDone.slice(0, 10));\r\n        setOrdersPending(resultSortedOrdersPending.slice(0, 10));\r\n    }, [orders]);\r\n    return (\r\n        <section className={style.content}>\r\n            <div className={`${style.section} mr-15`}>\r\n                <h1 className={`${style.title} mt-10 mb-1 text text_type_main-large`}>Лента заказов</h1>\r\n                <div className={style.scroll}>\r\n                    {\r\n                        orders.map((order, index) => (\r\n                            <OrderInFeed order={order} key={order._id} />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={style.content2}>\r\n                <div className={style.ordersNumbers}>\r\n                    <div className={style.orders}>\r\n                        <p className='text text_type_main-medium mb-6'>Готовы:</p>\r\n                        <div className={style.orders}>\r\n                            {\r\n                                ordersDone.map((order) => (\r\n                                    <p className='text text_type_digits-default mt-2 text_color_success' key={order._id}>{order.number}</p>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className={style.orders}>\r\n                        <p className='text text_type_main-medium mb-6'>В работе:</p>\r\n                        <div className={style.orders}>\r\n                            {\r\n                                ordersPending.map((order) => (\r\n                                    <p className='text text_type_digits-default mt-2' key={order._id}>{order.number}</p>\r\n                                ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <p className='text text_type_main-medium mt-15'>Выполнено за все время:</p>\r\n                <p className='text text_type_digits-large'>{total}</p>\r\n                <p className='text text_type_main-medium mt-15'>Выполнено за сегодня:</p>\r\n                <p className='text text_type_digits-large'>{totalToday}</p>\r\n            </div>\r\n        </section>\r\n    )\r\n};\r\nexport default Feed;","import React, { FC } from 'react';\r\nimport style from './order.module.css';\r\nimport { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ITypeData, ITypeOrder } from '../../utils/types';\r\nimport { amountOrderAndQuantityIngredients, setTimeLocalRu } from '../../utils/utils';\r\nimport { useDispatch, useSelector } from '../../services/hooks/redux-hooks';\r\nimport { WS_CONNECTION_CLOSED, WS_CONNECTION_START } from '../../services/actions/websocket';\r\nimport { wsUrl } from '../../utils/constants';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Order: FC = () => {\r\n    const { id } = useParams < { id: string } > ();\r\n    const dispatch = useDispatch();\r\n    const { orders } = useSelector((store) => store.socket.messages);\r\n    const { wsConnected } = useSelector((store) => store.socket);\r\n    React.useEffect(() => {\r\n        dispatch({ type: WS_CONNECTION_START, payload: { url: `${wsUrl}/all` } });\r\n        return () => {\r\n            dispatch({ type: WS_CONNECTION_CLOSED });\r\n        };\r\n    }, [dispatch]);\r\n    const burgerIngredients: ITypeData[] = useSelector((store) => store.items.items);\r\n    let statusOrder = \"\";\r\n    let ingredientsInOrder: ITypeData[] = [];\r\n    let timeLocal = {\r\n        time: \"\",\r\n        timeDay: \"\",\r\n        timeZone: \"\"\r\n    };\r\n    let sumOrder = 0;\r\n    let order: ITypeOrder = {\r\n        \"_id\": \"\",\r\n        \"ingredients\": [],\r\n        \"status\": \"\",\r\n        \"name\": \"\",\r\n        \"createdAt\": \"\",\r\n        \"updatedAt\": \"\",\r\n        \"number\": 0\r\n    }\r\n    if (orders && wsConnected && burgerIngredients) {\r\n        const orderFindById = orders.find((order) => order._id === id);\r\n        if (orderFindById) {\r\n            order = orderFindById;\r\n            const amountAndArray = amountOrderAndQuantityIngredients(burgerIngredients, order.ingredients);\r\n            timeLocal = setTimeLocalRu(order.createdAt);\r\n            const status = order.status;\r\n            ingredientsInOrder = amountAndArray.resultArray;\r\n            sumOrder = amountAndArray.amount;\r\n            switch (status) {\r\n                case 'done': statusOrder = ('Выполнен');\r\n                    break;\r\n                case 'created': statusOrder = ('Создан');\r\n                    break;\r\n                case 'pending': statusOrder = ('Готовится');\r\n                    break;\r\n                case 'cancelled': statusOrder = ('Отменен');\r\n                    break;\r\n                default: statusOrder = ('Неизвестно');\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <section className={style.section}>\r\n            {orders && wsConnected && burgerIngredients && \r\n                <div className={style.content}>\r\n                <p className='text text_type_digits-default mb-10'>#{order.number}</p>\r\n                <h3 className='text text_type_main-medium mb-3'>{order.name}</h3>\r\n                <p className=\"text text_type_main-small mb-15 text_color_success\">{statusOrder}</p>\r\n                <p className='text text_type_main-medium mb-6'>Состав: </p>\r\n                <div className={style.ingredients}>\r\n                    {ingredientsInOrder.map((data, index) => (\r\n                        <div className={style.ingredient} key={index}>\r\n                            <div className={style.leftPart}>\r\n                                <img className={`${style.image} ml-6 mr-5`} src={data.image} alt={data.name} />\r\n                                <p>{data.name}</p>\r\n                            </div>\r\n                            <div className={style.rightPart}>\r\n                                <p className='text text_type_digits-default mr-2 ml-4'>{data.quantity} x {data.price}</p>\r\n                                <CurrencyIcon type='primary' />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className={style.date}>\r\n                    <p className='text text_type_main-default text_color_inactive'>{timeLocal.timeDay}, {timeLocal.time} {timeLocal.timeZone}</p>\r\n                    <div className={style.price}>\r\n                        <p className='text text_type_digits-default mr-2'>{sumOrder}</p>\r\n                        <CurrencyIcon type='primary' />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n            \r\n        </section>\r\n    )\r\n};\r\nexport default Order;","import React, { FC } from 'react';\r\nimport { Switch, Route, useLocation, useHistory } from 'react-router-dom';\r\nimport AppHeader from '../app-header/app-header';\r\nimport BurgerConstructor from '../burger-constructor/burger-constructor';\r\nimport BurgerIngredients from '../burger-ingredients/burger-ingredients';\r\nimport OrderDetails from '../order-details/order-details';\r\nimport IngredientDetails from '../ingredient-details/ingredient-details';\r\nimport style from './app.module.css';\r\nimport Modal from '../modal/modal';\r\nimport { getItems, getUser, getNewToken } from '../../services/actions/index';\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { ADDED_ITEM, DELETE_ITEM } from '../../services/actions/index';\r\nimport NotFound from '../not-found/not-found';\r\nimport Login from '../../pages/login/login';\r\nimport Register from '../../pages/register/register';\r\nimport ForgotPassword from '../../pages/forgot-password/forgot-password';\r\nimport ResetPassword from '../../pages/reset-password/reset-password';\r\nimport Profile from '../../pages/profile/profile';\r\nimport ProtectedRoute from '../protected-route/protected-route';\r\nimport Ingredient from '../../pages/ingredient/ingredient';\r\nimport { ITypeData } from '../../utils/types';\r\nimport Feed from '../../pages/feed/feed';\r\nimport Order from '../order/order';\r\nimport { useDispatch, useSelector } from '../../services/hooks/redux-hooks';\r\n\r\nconst App: FC = () => {\r\n    const location: any = useLocation();\r\n    const history = useHistory();\r\n    const isLoading = useSelector((store) => store.items.isLoading);\r\n    const [isOpenModalOrder, setIsOpenModalOrder] = React.useState(false);\r\n    const burgerIngredients = useSelector((store) => store.items.items);\r\n    const ingredientsInBurger = useSelector((store) => store.cart.ingredients);\r\n    const tokenSuccess = useSelector((store) => store.user.tokenSuccess);\r\n    const dispatch = useDispatch();\r\n    React.useEffect(() => {\r\n        if (location.state) {\r\n            location.state = undefined;\r\n        }\r\n    }, []);\r\n    React.useEffect(() => {\r\n        dispatch(getItems());\r\n    }, [dispatch]);\r\n    const refreshToken = Boolean(localStorage.getItem('refreshToken'));\r\n    React.useEffect(() => {\r\n        if (refreshToken) {\r\n            dispatch(getNewToken());\r\n        }\r\n    }, [dispatch, refreshToken]);\r\n    React.useEffect(() => {\r\n        if (tokenSuccess) {\r\n            dispatch(getUser());\r\n        }\r\n    }, [dispatch, tokenSuccess]);\r\n    const handleDrop = (data: ITypeData) => {\r\n        const itemId = data._id;\r\n        const dropIngredient = burgerIngredients.find((item: ITypeData) => item._id === itemId);\r\n        if (dropIngredient) {\r\n            if (dropIngredient.type === 'bun') {\r\n                const bunTypeInBurger = ingredientsInBurger.find((item: ITypeData) => item.type === 'bun');\r\n                if (bunTypeInBurger) {\r\n                    dispatch({ type: DELETE_ITEM, id: bunTypeInBurger._id });\r\n                    dispatch({ type: ADDED_ITEM, item: dropIngredient });\r\n                }\r\n                else {\r\n                    dispatch({ type: ADDED_ITEM, item: dropIngredient });\r\n                }\r\n            }\r\n            else {\r\n                dispatch({ type: ADDED_ITEM, item: dropIngredient });\r\n            }\r\n        }\r\n    }\r\n    const background = location.state?.background;\r\n    const closeModalOrder = () => {\r\n        setIsOpenModalOrder(false);\r\n    }\r\n    const closeModalIngredient = () => {\r\n        history.push('/');\r\n    }\r\n    const closeModalOrderFromSocket = () => {\r\n        history.push('/feed')\r\n    }\r\n    const closeModalOrderFromSocketInProfile = () => {\r\n        history.push('/profile/orders')\r\n    }\r\n    return (\r\n\r\n        <div className={style.app}>\r\n            <AppHeader />\r\n            <Switch location={background || location}>\r\n                <Route path=\"/\" exact={true}>\r\n                    {isLoading ?\r\n                        <main className={style.content}>\r\n                            <DndProvider backend={HTML5Backend}>\r\n                                <BurgerIngredients />\r\n                                <BurgerConstructor onDropHandler={handleDrop} setIsOpenModalOrder={setIsOpenModalOrder} />\r\n                            </DndProvider>\r\n                        </main>\r\n                        : \"\"}\r\n                </Route>\r\n                <Route path=\"/login\" exact={true}>\r\n                    <Login />\r\n                </Route>\r\n                <Route path=\"/register\" exact={true}>\r\n                    <Register />\r\n                </Route>\r\n                <Route path=\"/forgot-password\" exact={true}>\r\n                    <ForgotPassword />\r\n                </Route>\r\n                <Route path=\"/reset-password\" exact={true}>\r\n                    <ResetPassword />\r\n                </Route>\r\n                <ProtectedRoute path='/profile/orders/:id' exact={true}>\r\n                    <Order/>\r\n                </ProtectedRoute>\r\n                <ProtectedRoute path=\"/profile\" exact={false}>\r\n                    <Profile />\r\n                </ProtectedRoute>\r\n                <Route path=\"/ingredients/:id\" exact={true}>\r\n                    <Ingredient />\r\n                </Route>\r\n                <Route path=\"/feed\" exact={true}>\r\n                    <Feed />\r\n                </Route>\r\n                <Route path=\"/feed/:id\" exact={true}>\r\n                    <Order />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                    <NotFound />\r\n                </Route>\r\n            </Switch>\r\n            {background && (\r\n                <>\r\n                    <Route path=\"/ingredients/:id\" exact={true}>\r\n                        <Modal title=\"Детали ингредиента\" closeModal={closeModalIngredient}>\r\n                            <IngredientDetails />\r\n                        </Modal>\r\n                    </Route>\r\n                    <Route path='/feed/:id' exact={true}>\r\n                        <Modal title=\"\" closeModal={closeModalOrderFromSocket}>\r\n                            <Order />\r\n                        </Modal>\r\n                    </Route>\r\n                    <ProtectedRoute path='/profile/orders/:id' exact={true}>\r\n                        <Modal title=\"\" closeModal={closeModalOrderFromSocketInProfile}>\r\n                            <Order />\r\n                        </Modal>\r\n                    </ProtectedRoute>\r\n                </>\r\n            )}\r\n            {isOpenModalOrder ? <Modal title=\"\" closeModal={closeModalOrder}>\r\n                <OrderDetails />\r\n            </Modal> : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ITypeData } from '../../utils/types';\r\nimport { ADDED_ITEM, DELETE_ITEM, DELETE_ITEM_ON_INDEX, CHANGE_ORDER_INGREDIENT_IN_BURGER, CLEAR_CART, TCartBurgerConstructorActions } from '../actions/index';\r\ntype TCartInitialStateBurgerConstructor = {\r\n    ingredients: ITypeData[]\r\n}\r\nconst cartInitialStateBurgerConstructor : TCartInitialStateBurgerConstructor = {\r\n    ingredients: []\r\n};\r\nexport const cartBurgerConstructorReducer = (state = cartInitialStateBurgerConstructor, action : TCartBurgerConstructorActions) : TCartInitialStateBurgerConstructor => {\r\n    switch (action.type) {\r\n        case ADDED_ITEM: {\r\n            return {\r\n                ...state,\r\n                ingredients: [...state.ingredients, action.item]\r\n            };\r\n        }\r\n        case DELETE_ITEM: {\r\n            return { ...state, ingredients: [...state.ingredients].filter(item => item._id !== action.id) };\r\n        }\r\n        case DELETE_ITEM_ON_INDEX: {\r\n            return {\r\n                ...state,\r\n                ingredients: [...state.ingredients].filter((item, index) => index !== action.index)\r\n            }\r\n        }\r\n        case CHANGE_ORDER_INGREDIENT_IN_BURGER: {\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients\r\n            }\r\n        }\r\n        case CLEAR_CART: {\r\n            return {\r\n                ...state,\r\n                ingredients: []\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { ITypeData } from '../../utils/types';\r\nimport { GET_ITEMS_REQUEST, GET_ITEMS_SUCCESS, GET_ITEMS_ERROR, TItemsActions } from '../actions/index';\r\ntype TInitialStateItems = {\r\n    items: ITypeData[],\r\n    isLoading: boolean,\r\n    itemsError: boolean\r\n}\r\nconst initialStateItems : TInitialStateItems = {\r\n    items: [],\r\n    isLoading: false,\r\n    itemsError: false\r\n};\r\nexport const itemsReducer = (state = initialStateItems, action : TItemsActions) : TInitialStateItems => {\r\n    switch (action.type) {\r\n        case GET_ITEMS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                isLoading: false\r\n            }\r\n        }\r\n        case GET_ITEMS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                itemsError: false,\r\n                items: action.items\r\n            }\r\n        }\r\n        case GET_ITEMS_ERROR: {\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                itemsError: true\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import { ORDER_REQUEST, ORDER_SUCCESS, ORDER_ERROR, TOrdersActions } from '../actions/index';\r\ntype TOrdersInitialState = {\r\n    orderNumber: number,\r\n    orderName: string,\r\n    orderRequest: boolean,\r\n    orderError: boolean\r\n}\r\nconst ordersInitialState : TOrdersInitialState= {\r\n    orderNumber: 0,\r\n    orderName: \"\",\r\n    orderRequest: false,\r\n    orderError: false\r\n};\r\nexport const orderReducer = (state = ordersInitialState, action : TOrdersActions) : TOrdersInitialState => {\r\n    switch (action.type) {\r\n        case ORDER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                orderRequest: true,\r\n                orderError: false\r\n            }\r\n        }\r\n        case ORDER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderError: false,\r\n                orderNumber: action.orders.order.number,\r\n                orderName: action.orders.name\r\n            }\r\n        }\r\n        case ORDER_ERROR: {\r\n            return {\r\n                ...state,\r\n                orderRequest: false,\r\n                orderError: true\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};","import {\r\n    USER_REQUEST, USER_REGISTRATION_SUCCESS, USER_REGISTRATION_FAILED, USER_REQUEST_SUCCESS,\r\n    USER_REQUEST_FAILED, FORGOT_PASSWORD_REQUEST, FORGOT_PASSWORD_SUCCESS, FORGOT_PASSWORD_FAILED,\r\n    RESET_PASSWORD_REQUEST, RESET_PASSWORD_SUCCESS, RESET_PASSWORD_FAILED, LOGOUT_REQUEST,\r\n    LOGOUT_SUCCESS, LOGOUT_FAILED, UPDATE_USER_REQUEST, UPDATE_USER_SUCCESS, UPDATE_USER_FAILED,\r\n    TOKEN_REQUEST, TOKEN_SUCCESS, TOKEN_FAILED, TUserActions\r\n} from '../actions/index';\r\ntype TUserInitialState = {\r\n    name: string,\r\n    email: string,\r\n    userRequest: boolean,\r\n    isLoggedIn: boolean,\r\n    passwordRequest: boolean,\r\n    isForgotPassword: boolean,\r\n    resetPasswordRequest: boolean,\r\n    isResetPassword: boolean,\r\n    logoutRequest: boolean,\r\n    logoutFailed: boolean,\r\n    updateUserRequest: boolean,\r\n    updateUserSuccess: boolean,\r\n    tokenRequest: boolean,\r\n    tokenSuccess: boolean\r\n}\r\nconst userInitialState : TUserInitialState = {\r\n    name: \"\",\r\n    email: \"\",\r\n    userRequest: false,\r\n    isLoggedIn: false,\r\n    passwordRequest: false,\r\n    isForgotPassword: false,\r\n    resetPasswordRequest: false,\r\n    isResetPassword: true,\r\n    logoutRequest: false,\r\n    logoutFailed: false,\r\n    updateUserRequest: false,\r\n    updateUserSuccess: false,\r\n    tokenRequest: false,\r\n    tokenSuccess: false\r\n};\r\nexport const userReducer = (state = userInitialState, action: TUserActions) : TUserInitialState => {\r\n    switch (action.type) {\r\n        case USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                userRequest: true\r\n            }\r\n        }\r\n        case USER_REGISTRATION_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userRequest: false,\r\n                name: action.user.name,\r\n                email: action.user.email,\r\n                isLoggedIn: true\r\n            }\r\n        }\r\n        case USER_REGISTRATION_FAILED: {\r\n            return {\r\n                ...state,\r\n                userRequest: false,\r\n                isLoggedIn: false,\r\n                email: \"\",\r\n                name: \"\"\r\n            }\r\n        }\r\n        case USER_REQUEST_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                userRequest: false,\r\n                name: action.user.name,\r\n                email: action.user.email,\r\n                isLoggedIn: true\r\n            }\r\n        }\r\n        case USER_REQUEST_FAILED: {\r\n            return {\r\n                ...state,\r\n                userRequest: false,\r\n                isLoggedIn: false,\r\n                email: \"\",\r\n                name: \"\"\r\n            }\r\n        }\r\n        case FORGOT_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                passwordRequest: true,\r\n                isResetPassword: false\r\n            }\r\n        }\r\n        case FORGOT_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                passwordRequest: false,\r\n                isForgotPassword: true\r\n            }\r\n        }\r\n        case FORGOT_PASSWORD_FAILED: {\r\n            return {\r\n                ...state,\r\n                passwordRequest: false\r\n            }\r\n        }\r\n        case RESET_PASSWORD_REQUEST: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: true\r\n            }\r\n        }\r\n        case RESET_PASSWORD_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: false,\r\n                isResetPassword: true,\r\n                isForgotPassword: false\r\n            }\r\n        }\r\n        case RESET_PASSWORD_FAILED: {\r\n            return {\r\n                ...state,\r\n                resetPasswordRequest: false\r\n            }\r\n        }\r\n        case LOGOUT_REQUEST: {\r\n            return {\r\n                ...state,\r\n                logoutRequest: true,\r\n                logoutFailed: false\r\n            }\r\n        }\r\n        case LOGOUT_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                email: \"\",\r\n                name: \"\",\r\n                logoutRequest: false,\r\n                logoutFailed: false,\r\n                isLoggedIn: false\r\n            }\r\n        }\r\n        case LOGOUT_FAILED: {\r\n            return {\r\n                ...state,\r\n                logoutRequest: false,\r\n                logoutFailed: true\r\n            }\r\n        }\r\n        case UPDATE_USER_REQUEST: {\r\n            return {\r\n                ...state,\r\n                updateUserRequest: true,\r\n                updateUserSuccess: false\r\n            }\r\n        }\r\n        case UPDATE_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                updateUserRequest: false,\r\n                updateUserSuccess: true,\r\n                name: action.user.name,\r\n                email: action.user.email\r\n            }\r\n        }\r\n        case UPDATE_USER_FAILED: {\r\n            return {\r\n                ...state,\r\n                updateUserRequest: false,\r\n                updateUserSuccess: false\r\n            }\r\n        }\r\n        case TOKEN_REQUEST: {\r\n            return {\r\n                ...state,\r\n                tokenRequest: true,\r\n                tokenSuccess: false\r\n            }\r\n        }\r\n        case TOKEN_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                tokenRequest: false,\r\n                tokenSuccess: true\r\n            }\r\n        }\r\n        case TOKEN_FAILED: {\r\n            return {\r\n                ...state,\r\n                tokenRequest: false,\r\n                tokenSuccess: false\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","import {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_MESSAGE\r\n} from '../actions/websocket';\r\nimport type { TWSActions } from '../actions/websocket';\r\nimport { IOrdersFromSocket } from '../../utils/types';\r\n\r\ntype TWSState = {\r\n  wsConnected: boolean;\r\n  messages: IOrdersFromSocket;\r\n  error?: Event;\r\n}\r\n\r\nconst initialState: TWSState = {\r\n  wsConnected: false,\r\n  messages: {\r\n    \"success\": false,\r\n    \"orders\": [],\r\n    \"total\": 0,\r\n    \"totalToday\": 0\r\n  }\r\n};\r\n\r\n// Создадим редьюсер для WebSocket\r\nexport const wsReducer = (state = initialState, action: TWSActions): TWSState => {\r\n  switch (action.type) {\r\n    // Опишем обработку экшена с типом WS_CONNECTION_SUCCESS\r\n    // Установим флаг wsConnected в состояние true\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        wsConnected: true\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_CONNECTION_ERROR\r\n    // Установим флаг wsConnected в состояние false и передадим ошибку из action.payload\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        wsConnected: false\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_CONNECTION_CLOSED, когда соединение закрывается\r\n    // Установим флаг wsConnected в состояние false\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        wsConnected: false\r\n      };\r\n\r\n    // Опишем обработку экшена с типом WS_GET_MESSAGE\r\n    // Обработка происходит, когда с сервера возвращаются данные\r\n    // В messages передадим данные, которые пришли с сервера\r\n    case WS_GET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        error: undefined,\r\n        messages: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from 'redux';\r\nimport { cartBurgerConstructorReducer } from './cart-burger-constructor';\r\nimport { itemsReducer } from './items';\r\nimport { orderReducer } from './order';\r\nimport { userReducer } from './user';\r\nimport { wsReducer } from './websocket';\r\n\r\nexport const rootReducer = combineReducers({\r\n    items: itemsReducer,\r\n    cart: cartBurgerConstructorReducer,\r\n    order: orderReducer,\r\n    user: userReducer,\r\n    socket: wsReducer\r\n});","import { compose, applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { wsActions } from \"./actions/websocket\";\r\nimport { socketMiddleware } from \"./middleware/socket-middleware\";\r\nimport { rootReducer } from \"./reducers\";\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n    : compose;\r\nconst enhancer = composeEnhancers(applyMiddleware(socketMiddleware(wsActions),thunk));\r\nexport const store = createStore(rootReducer, enhancer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { store } from './services/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <HashRouter>\r\n        <App />\r\n      </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"feed_content__1W7KJ\",\"section\":\"feed_section__koImK\",\"title\":\"feed_title__2FcEY\",\"scroll\":\"feed_scroll__3moo2\",\"content2\":\"feed_content2__3pugG\",\"ordersNumbers\":\"feed_ordersNumbers__121Yi\",\"orders\":\"feed_orders__3xAh4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"list-item_section__2Bd3U\",\"element_cart\":\"list-item_element_cart__1Nsf6\",\"element_up\":\"list-item_element_up__gtP3W\",\"element_down\":\"list-item_element_down__3Mucx\",\"image\":\"list-item_image__3OSmm\",\"name\":\"list-item_name__TEf2A\",\"price\":\"list-item_price__2SrTw\",\"left\":\"list-item_left__13T8-\",\"right\":\"list-item_right__1v-al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order_section__3VNE8\",\"content\":\"order_content__2_GdB\",\"date\":\"order_date__12s7B\",\"price\":\"order_price__171JI\",\"ingredients\":\"order_ingredients__2OiKi\",\"image\":\"order_image__1AYNa\",\"ingredient\":\"order_ingredient__1ALVw\",\"rightPart\":\"order_rightPart__1-ZkN\",\"leftPart\":\"order_leftPart__3PiHl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-ingredients_section__-Ak06\",\"nav\":\"burger-ingredients_nav__2iMmn\",\"title\":\"burger-ingredients_title__3_AuH\",\"scroll\":\"burger-ingredients_scroll__2foWA\",\"collection\":\"burger-ingredients_collection__2Q5S8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"login_section__1rAvM\",\"form\":\"login_form__1Z1JL\",\"links\":\"login_links__z3q6O\",\"link_container\":\"login_link_container__2LrnI\",\"link\":\"login_link__11l5X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order-in-profile_section__z1o7o\",\"top\":\"order-in-profile_top__2_TEi\",\"images\":\"order-in-profile_images__2rZb2\",\"bottom\":\"order-in-profile_bottom__1WsUd\",\"price\":\"order-in-profile_price__WiK5j\",\"image\":\"order-in-profile_image__3Td64\",\"link\":\"order-in-profile_link__3r246\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"order-in-feed_section__3F9No\",\"top\":\"order-in-feed_top__2kZaV\",\"images\":\"order-in-feed_images__1wWz3\",\"bottom\":\"order-in-feed_bottom__1zYd_\",\"price\":\"order-in-feed_price__NKT20\",\"image\":\"order-in-feed_image__3z_Bo\",\"link\":\"order-in-feed_link__1FA1X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order-details_order__1T4bZ\",\"content\":\"order-details_content__3P2OD\",\"image\":\"order-details_image__1O7_p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"burger-constructor_section__1iZjT\",\"order\":\"burger-constructor_order__3WHwv\",\"price_order\":\"burger-constructor_price_order__1tIib\",\"text_order\":\"burger-constructor_text_order__1fduo\",\"scroll\":\"burger-constructor_scroll__2FnzC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ingredient_card__3TMuS\",\"image\":\"ingredient_image__VqNcc\",\"price\":\"ingredient_price__1PqMC\",\"digits\":\"ingredient_digits__2ypwx\",\"name\":\"ingredient_name__1WJoB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"register_section__UrNTU\",\"form\":\"register_form__N8v6m\",\"link_container\":\"register_link_container__16Oi6\",\"link\":\"register_link__1SmYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"forgot-password_section__z8ZOl\",\"form\":\"forgot-password_form__2-_0O\",\"link_container\":\"forgot-password_link_container__k3H-Z\",\"link\":\"forgot-password_link__16m9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"reset-password_section__3vD6e\",\"form\":\"reset-password_form__1N4RW\",\"link_container\":\"reset-password_link_container__3oha-\",\"link\":\"reset-password_link__tCIwM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__Dh_2U\",\"content\":\"app_content__3iYF8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"modal_section__3eTNG\",\"container\":\"modal_container__eODvu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"ingredient_section__194xx\",\"text_title\":\"ingredient_text_title__-0-Mg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"app-header_header__1iUxP\",\"constructor1\":\"app-header_constructor1__YZKT_\",\"constructor2\":\"app-header_constructor2__3YIpw\",\"constructor3\":\"app-header_constructor3__ykbZY\",\"constructor4\":\"app-header_constructor4__DRmA1\",\"text__button\":\"app-header_text__button__2UrBi\",\"button\":\"app-header_button__2O8An\",\"icon\":\"app-header_icon__11DRp\",\"active\":\"app-header_active__1Bkcp\"};"],"sourceRoot":""}